#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7 effective-4.2 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef MERCADOPAGOSDK_SWIFT_H
#define MERCADOPAGOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import MLBusinessComponents;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MercadoPagoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol AddCardFlowProtocol;
@class NSString;
@class UINavigationController;
@protocol PXTheme;

SWIFT_CLASS("_TtC14MercadoPagoSDK11AddCardFlow")
@interface AddCardFlow : NSObject
@property (nonatomic, weak) id <AddCardFlowProtocol> _Nullable delegate;
- (nonnull instancetype)initWithAccessToken:(NSString * _Nonnull)accessToken locale:(NSString * _Nonnull)locale navigationController:(UINavigationController * _Nonnull)navigationController shouldSkipCongrats:(BOOL)shouldSkipCongrats;
- (nonnull instancetype)initWithAccessToken:(NSString * _Nonnull)accessToken locale:(NSString * _Nonnull)locale navigationController:(UINavigationController * _Nonnull)navigationController OBJC_DESIGNATED_INITIALIZER;
- (void)setSiteId:(NSString * _Nonnull)siteId;
/// Set product id
- (void)setProductId:(NSString * _Nonnull)productId;
- (void)start;
- (void)setThemeWithTheme:(id <PXTheme> _Nonnull)theme;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19AddCardFlowProtocol_")
@protocol AddCardFlowProtocol
- (void)addCardFlowSuccededWithResult:(NSDictionary<NSString *, id> * _Nonnull)result;
- (void)addCardFlowFailedWithShouldRestart:(BOOL)shouldRestart;
@end




/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10ErrorTypes")
@interface ErrorTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol FSPagerViewDataSource;
@protocol FSPagerViewDelegate;
enum ScrollDirection : NSInteger;
@class FSPagerViewTransformer;
@class UIPanGestureRecognizer;
@class NSCoder;
@class UIWindow;
@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;
@class UIScrollView;
@class UINib;
@class FSPagerViewCell;

IB_DESIGNABLE
SWIFT_CLASS("_TtC14MercadoPagoSDK11FSPagerView")
@interface FSPagerView : UIView <UICollectionViewDataSource, UICollectionViewDelegate>
/// The object that acts as the data source of the pager view.
@property (nonatomic, weak) IBOutlet id <FSPagerViewDataSource> _Nullable dataSource;
/// The object that acts as the delegate of the pager view.
@property (nonatomic, weak) IBOutlet id <FSPagerViewDelegate> _Nullable delegate;
/// The scroll direction of the pager view. Default is horizontal.
@property (nonatomic) enum ScrollDirection scrollDirection;
/// The time interval of automatic sliding. 0 means disabling automatic sliding. Default is 0.
@property (nonatomic) IBInspectable CGFloat automaticSlidingInterval;
/// The spacing to use between items in the pager view. Default is 0.
@property (nonatomic) IBInspectable CGFloat interitemSpacing;
/// The item size of the pager view. When the value of this property is FSPagerView.automaticSize, the items fill the entire visible area of the pager view. Default is FSPagerView.automaticSize.
@property (nonatomic) IBInspectable CGSize itemSize;
/// A Boolean value indicates that whether the pager view has infinite items. Default is false.
@property (nonatomic) IBInspectable BOOL isInfinite;
/// An unsigned integer value that determines the deceleration distance of the pager view, which indicates the number of passing items during the deceleration. When the value of this property is FSPagerView.automaticDistance, the actual ‘distance’ is automatically calculated according to the scrolling speed of the pager view. Default is 1.
@property (nonatomic) IBInspectable NSUInteger decelerationDistance;
/// A Boolean value that determines whether scrolling is enabled.
@property (nonatomic) IBInspectable BOOL isScrollEnabled;
/// A Boolean value that controls whether the pager view bounces past the edge of content and back again.
@property (nonatomic) IBInspectable BOOL bounces;
/// A Boolean value that determines whether bouncing always occurs when horizontal scrolling reaches the end of the content view.
@property (nonatomic) IBInspectable BOOL alwaysBounceHorizontal;
/// A Boolean value that determines whether bouncing always occurs when vertical scrolling reaches the end of the content view.
@property (nonatomic) IBInspectable BOOL alwaysBounceVertical;
/// A Boolean value that controls whether the infinite loop is removed if there is only one item. Default is false.
@property (nonatomic) IBInspectable BOOL removesInfiniteLoopForSingleItem;
/// The background view of the pager view.
@property (nonatomic, strong) IBInspectable UIView * _Nullable backgroundView;
/// The transformer of the pager view.
@property (nonatomic, strong) FSPagerViewTransformer * _Nullable transformer;
/// Returns whether the user has touched the content to initiate scrolling.
@property (nonatomic, readonly) BOOL isTracking;
/// The percentage of x position at which the origin of the content view is offset from the origin of the pagerView view.
@property (nonatomic, readonly) CGFloat scrollOffset;
/// The underlying gesture recognizer for pan gestures.
@property (nonatomic, readonly, strong) UIPanGestureRecognizer * _Nonnull panGestureRecognizer;
@property (nonatomic, readonly) NSInteger currentIndex;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
/// Register a class for use in creating new pager view cells.
/// \param cellClass The class of a cell that you want to use in the pager view.
///
/// \param identifier The reuse identifier to associate with the specified class. This parameter must not be nil and must not be an empty string.
///
- (void)registerClass:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
/// Register a nib file for use in creating new pager view cells.
/// \param nib The nib object containing the cell object. The nib file must contain only one top-level object and that object must be of the type FSPagerViewCell.
///
/// \param identifier The reuse identifier to associate with the specified nib file. This parameter must not be nil and must not be an empty string.
///
- (void)registerNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
/// Returns a reusable cell object located by its identifier
/// \param identifier The reuse identifier for the specified cell. This parameter must not be nil.
///
/// \param index The index specifying the location of the cell.
///
///
/// returns:
/// A valid FSPagerViewCell object.
- (FSPagerViewCell * _Nonnull)dequeueReusableCellWithReuseIdentifier:(NSString * _Nonnull)identifier atIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Reloads all of the data for the collection view.
- (void)reloadData;
/// Selects the item at the specified index and optionally scrolls it into view.
/// \param index The index path of the item to select.
///
/// \param animated Specify true to animate the change in the selection or false to make the change without animating it.
///
- (void)selectItemAtIndex:(NSInteger)index animated:(BOOL)animated;
/// Deselects the item at the specified index.
/// \param index The index of the item to deselect.
///
/// \param animated Specify true to animate the change in the selection or false to make the change without animating it.
///
- (void)deselectItemAtIndex:(NSInteger)index animated:(BOOL)animated;
/// Scrolls the pager view contents until the specified item is visible.
/// \param index The index of the item to scroll into view.
///
/// \param animated Specify true to animate the scrolling behavior or false to adjust the pager view’s visible content immediately.
///
- (void)scrollToItemAtIndex:(NSInteger)index animated:(BOOL)animated;
/// Returns the index of the specified cell.
/// \param cell The cell object whose index you want.
///
///
/// returns:
/// The index of the cell or NSNotFound if the specified cell is not in the pager view.
- (NSInteger)indexForCell:(FSPagerViewCell * _Nonnull)cell SWIFT_WARN_UNUSED_RESULT;
/// Returns the visible cell at the specified index.
/// \param index The index that specifies the position of the cell.
///
///
/// returns:
/// The cell object at the corresponding position or nil if the cell is not visible or index is out of range.
- (FSPagerViewCell * _Nullable)cellForItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end


@interface FSPagerView (SWIFT_EXTENSION(MercadoPagoSDK))
@end

/// Constants indicating the direction of scrolling for the pager view.
typedef SWIFT_ENUM(NSInteger, ScrollDirection, closed) {
/// The pager view scrolls content horizontally
  ScrollDirectionHorizontal = 0,
/// The pager view scrolls content vertically
  ScrollDirectionVertical = 1,
};

@class UILabel;
@class UIImageView;

SWIFT_CLASS("_TtC14MercadoPagoSDK15FSPagerViewCell")
@interface FSPagerViewCell : UICollectionViewCell
/// Returns the label used for the main textual content of the pager view cell.
@property (nonatomic, readonly, strong) UILabel * _Nullable textLabel;
/// Returns the image view of the pager view cell. Default is nil.
@property (nonatomic, readonly, strong) UIImageView * _Nullable imageView;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK21FSPagerViewDataSource_")
@protocol FSPagerViewDataSource <NSObject>
/// Asks your data source object for the number of items in the pager view.
- (NSInteger)numberOfItemsInPagerView:(FSPagerView * _Nonnull)pagerView SWIFT_WARN_UNUSED_RESULT;
/// Asks your data source object for the cell that corresponds to the specified item in the pager view.
- (FSPagerViewCell * _Nonnull)pagerView:(FSPagerView * _Nonnull)pagerView cellForItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19FSPagerViewDelegate_")
@protocol FSPagerViewDelegate <NSObject>
@optional
/// Asks the delegate if the item should be highlighted during tracking.
- (BOOL)pagerView:(FSPagerView * _Nonnull)pagerView shouldHighlightItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Tells the delegate that the item at the specified index was highlighted.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView didHighlightItemAtIndex:(NSInteger)index;
/// Asks the delegate if the specified item should be selected.
- (BOOL)pagerView:(FSPagerView * _Nonnull)pagerView shouldSelectItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Tells the delegate that the item at the specified index was selected.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView didSelectItemAtIndex:(NSInteger)index;
/// Tells the delegate that the specified cell is about to be displayed in the pager view.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView willDisplayCell:(FSPagerViewCell * _Nonnull)cell forItemAtIndex:(NSInteger)index;
/// Tells the delegate that the specified cell was removed from the pager view.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView didEndDisplayingCell:(FSPagerViewCell * _Nonnull)cell forItemAtIndex:(NSInteger)index;
/// Tells the delegate when the pager view is about to start scrolling the content.
- (void)pagerViewWillBeginDragging:(FSPagerView * _Nonnull)pagerView;
/// Tells the delegate when the user finishes scrolling the content.
- (void)pagerViewWillEndDragging:(FSPagerView * _Nonnull)pagerView targetIndex:(NSInteger)targetIndex;
/// Tells the delegate when the user scrolls the content view within the receiver.
- (void)pagerViewDidScroll:(FSPagerView * _Nonnull)pagerView;
/// Tells the delegate when a scrolling animation in the pager view concludes.
- (void)pagerViewDidEndScrollAnimation:(FSPagerView * _Nonnull)pagerView;
/// Tells the delegate that the pager view has ended decelerating the scrolling movement.
- (void)pagerViewDidEndDecelerating:(FSPagerView * _Nonnull)pagerView;
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK27FSPagerViewLayoutAttributes")
@interface FSPagerViewLayoutAttributes : UICollectionViewLayoutAttributes
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum FSPagerViewTransformerType : NSInteger;

SWIFT_CLASS("_TtC14MercadoPagoSDK22FSPagerViewTransformer")
@interface FSPagerViewTransformer : NSObject
- (nonnull instancetype)initWithType:(enum FSPagerViewTransformerType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, FSPagerViewTransformerType, closed) {
  FSPagerViewTransformerTypeCrossFading = 0,
  FSPagerViewTransformerTypeZoomOut = 1,
  FSPagerViewTransformerTypeDepth = 2,
  FSPagerViewTransformerTypeOverlap = 3,
  FSPagerViewTransformerTypeLinear = 4,
  FSPagerViewTransformerTypeCoverFlow = 5,
  FSPagerViewTransformerTypeFerrisWheel = 6,
  FSPagerViewTransformerTypeInvertedFerrisWheel = 7,
  FSPagerViewTransformerTypeCubic = 8,
};


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK18IdentificationType")
@interface IdentificationType : NSObject
@property (nonatomic, copy) NSString * _Nullable identificationTypeId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic) NSInteger minLength;
@property (nonatomic) NSInteger maxLength;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MercadoPagoCheckoutBuilder;

/// Main class of this project.
/// It provides access to most of the checkout experience. It takes a <code>MercadoPagoCheckoutBuilder</code> object.
SWIFT_CLASS("_TtC14MercadoPagoSDK19MercadoPagoCheckout")
@interface MercadoPagoCheckout : NSObject
/// Mandatory init. Based on <code>MercadoPagoCheckoutBuilder</code>
/// \param builder MercadoPagoCheckoutBuilder object.
///
- (nonnull instancetype)initWithBuilder:(MercadoPagoCheckoutBuilder * _Nonnull)builder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end






@protocol PXLifeCycleProtocol;
@protocol PXLazyInitProtocol;

@interface MercadoPagoCheckout (SWIFT_EXTENSION(MercadoPagoSDK))
/// Start checkout experience. This method push our ViewController in your navigation stack.
/// \param navigationController Instance of your <code>UINavigationController</code>.
///
/// \param lifeCycleProtocol Instance of <code>PXLifeCycleProtocol</code> implementation. Provide this protocol in order to get notifications related to our checkout lifecycle. (<code>FinishCheckout</code> and <code>CancelCheckout</code>)
///
- (void)startWithNavigationController:(UINavigationController * _Nonnull)navigationController lifeCycleProtocol:(id <PXLifeCycleProtocol> _Nullable)lifeCycleProtocol;
/// Start checkout init services in lazy mode (without UI). Start our init methods and provide a protocol to notify when the checkout is ready to launch <code>PXLazyInitProtocol</code>
/// \param lazyInitProtocol Implementation of <code>PXLazyInitProtocol</code>.
///
- (void)startWithLazyInitProtocol:(id <PXLazyInitProtocol> _Nonnull)lazyInitProtocol;
@end











@class PXPaymentConfiguration;
@class PXCheckoutPreference;

/// Checkout builder allows you to create a <code>MercadoPagoCheckout</code>. You’ll need a publicKey from MercadoPago Developers Site.
SWIFT_CLASS("_TtC14MercadoPagoSDK26MercadoPagoCheckoutBuilder")
@interface MercadoPagoCheckoutBuilder : NSObject
/// Mandatory init.
/// \param publicKey Merchant public key / collector public key
///
/// \param preferenceId The preference id that represents the payment information.
///
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey preferenceId:(NSString * _Nonnull)preferenceId OBJC_DESIGNATED_INITIALIZER;
/// Mandatory init.
/// \param publicKey Merchant public key / collector public key.
///
/// \param preferenceId The preference id that represents the payment information.
///
/// \param paymentConfiguration The payment configuration object for this checkout.
///
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey preferenceId:(NSString * _Nonnull)preferenceId paymentConfiguration:(PXPaymentConfiguration * _Nonnull)paymentConfiguration;
/// Mandatory init.
/// \param publicKey Merchant public key / collector public key.
///
/// \param checkoutPreference The preference that represents the payment information.
///
/// \param paymentConfiguration The payment configuration for this checkout.
///
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey checkoutPreference:(PXCheckoutPreference * _Nonnull)checkoutPreference paymentConfiguration:(PXPaymentConfiguration * _Nonnull)paymentConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class PXAdvancedConfiguration;
@class PXTrackingConfiguration;
@class UIColor;
enum PXCustomTranslationKey : NSInteger;

@interface MercadoPagoCheckoutBuilder (SWIFT_EXTENSION(MercadoPagoSDK))
/// Private key provides save card capabilities and account money balance. (User logged)
/// \param privateKey The user private key
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setPrivateKeyWithKey:(NSString * _Nonnull)key;
/// It provides support for custom checkout functionality/configure special behaviour
/// You can enable/disable several functionality.
/// \param config <code>PXAdvancedConfiguration</code> object.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setAdvancedConfigurationWithConfig:(PXAdvancedConfiguration * _Nonnull)config;
/// It provides support for tracking related functionalities.
/// \param config <code>PXTrackingConfiguration</code> object.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setTrackingConfigurationWithConfig:(PXTrackingConfiguration * _Nonnull)config;
/// You can set one color (your primary color) and we will take care of the rest. Delivering the best Checkout experience based on your color. If you need more customization explore <code>PXTheme</code> inside <code>PXAdvancedConfiguration</code>.
/// \param checkoutColor Your primary color.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setColorWithCheckoutColor:(UIColor * _Nonnull)checkoutColor;
/// You can set the Language locale string. (<code>es</code> is the default value). For more values explore our <code>PXLanguages</code> public enum.
/// \param _string Your locale string Language.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setLanguage:(NSString * _Nonnull)string;
/// :nodoc:
- (MercadoPagoCheckoutBuilder * _Nonnull)addCustomTranslation:(enum PXCustomTranslationKey)key withTranslation:(NSString * _Nonnull)translation;
@end






/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK17PXAccountMoneyDto")
@interface PXAccountMoneyDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// This object is for custom actions. It takes a label and a closure. Closures in Swift are similar to blocks in Objective-C. We need this object in certains scenarios, like in <code>PXBusinessResult</code> custom button actions.
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXAction")
@interface PXAction : NSObject
/// Mandatory init.
/// \param label The label for your custom action.
///
/// \param action Clousure custom block.
///
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label action:(void (^ _Nonnull)(void))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXAddress")
@interface PXAddress : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class PXReviewConfirmConfiguration;
@class PXPaymentResultConfiguration;
@protocol PXReviewConfirmDynamicViewsConfiguration;
@protocol PXDynamicViewControllerProtocol;
@class PXDiscountParamsConfiguration;

/// Advanced configuration provides you support for custom checkout functionality/configure special behaviour when checkout is running.
SWIFT_CLASS("_TtC14MercadoPagoSDK23PXAdvancedConfiguration")
@interface PXAdvancedConfiguration : NSObject
/// Advanced UI color customization. Use this config to create your custom UI colors based on PXTheme protocol. Also you can use this protocol to customize your fonts.
@property (nonatomic, strong) id <PXTheme> _Nullable theme;
/// Add the possibility to configure ESC behaviour.
/// If set as true, then saved cards will try to use ESC feature.
/// If set as false, then security code will be always asked.
@property (nonatomic) BOOL escEnabled SWIFT_DEPRECATED;
/// Add the possibility to enabled/disabled express checkout.
@property (nonatomic) BOOL expressEnabled;
/// Instores usage / money in usage. - Use case: Not all bank deals apply right now to all preferences.
@property (nonatomic) BOOL bankDealsEnabled;
/// Loyalty usage. - Use case: Show/hide bottom amount row.
@property (nonatomic) BOOL amountRowEnabled;
/// Enable to preset configurations to customize visualization on the ‘Review and Confirm screen’
@property (nonatomic, strong) PXReviewConfirmConfiguration * _Nonnull reviewConfirmConfiguration;
/// Enable to preset configurations to customize visualization on the ‘Congrats’ screen / ‘PaymentResult’ screen.
@property (nonatomic, strong) PXPaymentResultConfiguration * _Nonnull paymentResultConfiguration;
/// Add dynamic custom views on ‘Review and Confirm screen’.
@property (nonatomic, strong) id <PXReviewConfirmDynamicViewsConfiguration> _Nullable reviewConfirmDynamicViewsConfiguration;
/// Add dynamic view controllers to flow.
@property (nonatomic, copy) NSArray<id <PXDynamicViewControllerProtocol>> * _Nonnull dynamicViewControllersConfiguration;
/// Set additional data to get discounts
@property (nonatomic, strong) PXDiscountParamsConfiguration * _Nullable discountParamsConfiguration;
/// Set product id
- (void)setProductIdWithId:(NSString * _Nonnull)id;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK21PXAmountConfiguration")
@interface PXAmountConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXAmountInfo")
@interface PXAmountInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK14PXApiException")
@interface PXApiException : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXBankDeal")
@interface PXBankDeal : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK8PXResult_")
@protocol PXResult <NSObject>
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK13PXBasePayment_")
@protocol PXBasePayment <PXResult>
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK5PXBin")
@interface PXBin : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Whe use this object to store properties related to Biometric module.
/// Check PXBiometricProtocol methods.
SWIFT_CLASS("_TtC14MercadoPagoSDK17PXBiometricConfig")
@interface PXBiometricConfig : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull flowIdentifier;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull params;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// Use this protocol to implement Biometric validation
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19PXBiometricProtocol_")
@protocol PXBiometricProtocol <NSObject>
- (void)validateWithConfig:(PXBiometricConfig * _Nonnull)config onSuccess:(void (^ _Nonnull)(void))onSuccess onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (BOOL)isValidationRequiredWithConfig:(PXBiometricConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
@end

enum PXBusinessResultStatus : NSInteger;
@class UIImage;

/// This class represents a business payment result.
/// For example, when there is an error when making a payment that has to do with the business and not with the payment method.
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXBusinessResult")
@interface PXBusinessResult : NSObject <PXBasePayment>
/// Creates a <code>PXBusinessResult</code> which represents Business Payment Result.
/// \param receiptId Reference id for payment receipt.
///
/// \param status Business Status Result
///
/// \param title Title that will be displayed on the result screen
///
/// \param subtitle Sub-title that will be displayed on the result screen
///
/// \param icon Icon that will be displayed on the result screen
///
/// \param mainAction Action for the main action button that will be displayed on the result screen
///
/// \param secondaryAction Action for the secondary action button that will be displayed on the result screen
///
/// \param helpMessage Help message that will be displayed on the result screen
///
/// \param showPaymentMethod True if you want to show the cell of payment method in the result screen
///
/// \param statementDescription Statement description that will be displayed on the result screen
///
/// \param imageUrl Image url for the icon that will be displayed on the result screen
///
/// \param topCustomView Custom view that will be displayed on the result screen on top
///
/// \param bottomCustomView Custom view that will be displayed on the result screen on bottom
///
/// \param paymentStatus Payment status of the payment result
///
/// \param paymentStatusDetail Payment status detail of the payment result
///
- (nonnull instancetype)initWithReceiptId:(NSString * _Nullable)receiptId status:(enum PXBusinessResultStatus)status title:(NSString * _Nonnull)title subtitle:(NSString * _Nullable)subtitle icon:(UIImage * _Nullable)icon mainAction:(PXAction * _Nullable)mainAction secondaryAction:(PXAction * _Nullable)secondaryAction helpMessage:(NSString * _Nullable)helpMessage showPaymentMethod:(BOOL)showPaymentMethod statementDescription:(NSString * _Nullable)statementDescription imageUrl:(NSString * _Nullable)imageUrl topCustomView:(UIView * _Nullable)topCustomView bottomCustomView:(UIView * _Nullable)bottomCustomView paymentStatus:(NSString * _Nonnull)paymentStatus paymentStatusDetail:(NSString * _Nonnull)paymentStatusDetail OBJC_DESIGNATED_INITIALIZER;
/// Creates a <code>PXBusinessResult</code> which represents Business Payment Result.
/// \param receiptId Reference id for payment receipt.
///
/// \param status Business Status Result
///
/// \param title Title that will be displayed on the result screen
///
/// \param subtitle Sub-title that will be displayed on the result screen
///
/// \param icon Icon that will be displayed on the result screen
///
/// \param mainAction Action for the main action button that will be displayed on the result screen
///
/// \param secondaryAction Action for the secondary action button that will be displayed on the result screen
///
/// \param helpMessage Help message that will be displayed on the result screen
///
/// \param showPaymentMethod True if you want to show the cell of payment method in the result screen
///
/// \param statementDescription Statement description that will be displayed on the result screen
///
/// \param imageUrl Image url for the icon that will be displayed on the result screen
///
/// \param topCustomView Custom view that will be displayed on the result screen at top of Payment Method
///
/// \param bottomCustomView Custom view that will be displayed on the result screen at bottom of Payment Method
///
/// \param paymentStatus Payment status of the payment result
///
/// \param paymentStatusDetail Payment status detail of the payment result
///
/// \param paymentMethodId Payment method id
///
/// \param paymentTypeId Payment type id
///
/// \param importantView Custom view that will be displayed above crossSeling backend drive box. (Below congrats header)
///
- (nonnull instancetype)initWithReceiptId:(NSString * _Nullable)receiptId status:(enum PXBusinessResultStatus)status title:(NSString * _Nonnull)title subtitle:(NSString * _Nullable)subtitle icon:(UIImage * _Nullable)icon mainAction:(PXAction * _Nullable)mainAction secondaryAction:(PXAction * _Nullable)secondaryAction helpMessage:(NSString * _Nullable)helpMessage showPaymentMethod:(BOOL)showPaymentMethod statementDescription:(NSString * _Nullable)statementDescription imageUrl:(NSString * _Nullable)imageUrl topCustomView:(UIView * _Nullable)topCustomView bottomCustomView:(UIView * _Nullable)bottomCustomView paymentStatus:(NSString * _Nonnull)paymentStatus paymentStatusDetail:(NSString * _Nonnull)paymentStatusDetail paymentMethodId:(NSString * _Nonnull)paymentMethodId paymentTypeId:(NSString * _Nonnull)paymentTypeId importantView:(UIView * _Nullable)importantView OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXBusinessResult (SWIFT_EXTENSION(MercadoPagoSDK))
- (PXBusinessResult * _Nonnull)setReceiptIdList:(NSArray<NSString *> * _Nonnull)receiptList;
- (PXBusinessResult * _Nonnull)shouldShowReceipt:(BOOL)shouldShow;
@end



@interface PXBusinessResult (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
@end


/// Possible Business Result Status:
/// <ul>
///   <li>
///     APPROVED
///   </li>
///   <li>
///     REJECTED
///   </li>
///   <li>
///     PENDING
///   </li>
///   <li>
///     IN_PROGRESS
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, PXBusinessResultStatus, closed) {
/// APPROVED payment.
  PXBusinessResultStatusAPPROVED = 0,
/// REJECTED payment.
  PXBusinessResultStatusREJECTED = 1,
/// PENDING payment.
  PXBusinessResultStatusPENDING = 2,
/// IN_PROGRESS payment.
  PXBusinessResultStatusIN_PROGRESS = 3,
};

@class NSDate;

/// Model that represents a discount campaign.
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXCampaign")
@interface PXCampaign : NSObject
/// Mandatory init.
/// \param id Campaign id.
///
/// \param code Campaign code.
///
/// \param maxRedeemPerUser Campaign max redeem per user.
///
/// \param name Campaign name.
///
/// \param maxCouponAmount Campaign max coupon amount.
///
/// \param endDate Campaign end date.
///
- (nonnull instancetype)initWithId:(int64_t)id code:(NSString * _Nullable)code maxRedeemPerUser:(NSInteger)maxRedeemPerUser name:(NSString * _Nullable)name maxCouponAmount:(double)maxCouponAmount endDate:(NSDate * _Nonnull)endDate OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (nonnull instancetype)initWithId:(int64_t)id code:(NSString * _Nullable)code name:(NSString * _Nullable)name maxCouponAmount:(double)maxCouponAmount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXCampaign (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (int64_t)getId SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK6PXCard")
@interface PXCard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXCardDisplayInfoDto")
@interface PXCardDisplayInfoDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXCardHolder")
@interface PXCardHolder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXCardNumber")
@interface PXCardNumber : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXCardToken")
@interface PXCardToken : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXCause")
@interface PXCause : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class PXItem;
@class PXPayer;
@class PXPaymentPreference;
@class PXSite;
@class PXDifferentialPricing;
@class NSData;

/// Model that represents <code>curl -X OPTIONS</code> (https://api.mercadopago.com/checkout/preferences) <code>| json_pp</code>
/// It can be not exactly the same because exists custom configurations for open Preference.
/// Some values like: binary mode are not present on API call.
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXCheckoutPreference")
@interface PXCheckoutPreference : NSObject
/// id
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// items
@property (nonatomic, copy) NSArray<PXItem *> * _Nonnull items;
/// payer
@property (nonatomic, strong) PXPayer * _Null_unspecified payer;
/// paymentPreference
@property (nonatomic, strong) PXPaymentPreference * _Nonnull paymentPreference;
/// siteId
@property (nonatomic, copy) NSString * _Nonnull siteId;
/// expirationDateTo
@property (nonatomic, copy) NSDate * _Nullable expirationDateTo;
/// expirationDateFrom
@property (nonatomic, copy) NSDate * _Nullable expirationDateFrom;
/// site
@property (nonatomic, strong) PXSite * _Nullable site;
/// differentialPricing
@property (nonatomic, strong) PXDifferentialPricing * _Nullable differentialPricing;
/// marketplace
@property (nonatomic, copy) NSString * _Nullable marketplace;
/// branch id
@property (nonatomic, copy) NSString * _Nullable branchId;
/// processing mode
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull processingModes;
/// Additional info - json string.
@property (nonatomic, copy) NSString * _Nullable additionalInfo;
/// Collector ID
@property (nonatomic, copy) NSString * _Nullable collectorId;
/// Mandatory init.
/// \param preferenceId The preference id that represents the payment information.
///
- (nonnull instancetype)initWithPreferenceId:(NSString * _Nonnull)preferenceId OBJC_DESIGNATED_INITIALIZER;
/// Mandatory init.
/// Builder for custom CheckoutPreference construction.
/// It should be only used if you are processing the payment
/// with a Payment processor. Otherwise you should use the ID constructor.
/// \param siteId Preference site.
///
/// \param payerEmail Payer email.
///
/// \param items Items to pay.
///
- (nonnull instancetype)initWithSiteId:(NSString * _Nonnull)siteId payerEmail:(NSString * _Nonnull)payerEmail items:(NSArray<PXItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (PXCheckoutPreference * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// Determinate if binaryMode feature is enabled/disabled.
- (BOOL)isBinaryMode SWIFT_WARN_UNUSED_RESULT;
/// Default value is <code>FALSE</code>.
/// <code>TRUE</code> value processed payment can only be APPROVED or REJECTED.
/// Non compatible with PaymentProcessor or off payments methods.
/// \param isBinaryMode Binary mode Bool value.
///
- (PXCheckoutPreference * _Nonnull)setBinaryModeWithIsBinaryMode:(BOOL)isBinaryMode;
@end


@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
- (void)setPayerWithPayer:(PXPayer * _Nonnull)payer;
@end




@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// \param processingModes Supported proccesing modes by the preference. On a first instance this field can support aggregator and gateway modes. If this setter is not used aggregator only support will be infered.
///
- (void)setGatewayProcessingModes:(NSArray<NSString *> * _Nonnull)processingModes;
/// \param branchId This field can be used optionally to customize the gateway mode experience.
///
- (void)setGatewayBranchId:(NSString * _Nonnull)branchId;
/// getProcessingModes
- (NSArray<NSString *> * _Nonnull)getProcessingModes SWIFT_WARN_UNUSED_RESULT;
/// getBranchId
- (NSString * _Nullable)getBranchId SWIFT_WARN_UNUSED_RESULT;
@end



@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// Date that indicates when this preference expires.
/// If the preference is expired, then the checkout will show an error.
/// \param expirationDate Date expiration.
///
- (void)setExpirationDate:(NSDate * _Nonnull)expirationDate;
/// Date that indicates when this preference start.
/// \param date Date active.
///
- (void)setActiveFromDate:(NSDate * _Nonnull)date;
/// Differential pricing configuration for this preference.
/// This object is related with the way the installments are asked.
/// \param differentialPricing <code>PXDifferentialPricing</code> pricing object.
///
- (void)setDifferentialPricingWithDifferentialPricing:(PXDifferentialPricing * _Nonnull)differentialPricing;
/// Add exclusion payment method id. If you exclude it, it’s not going appear as a payment method available on checkout.
/// \param paymentMethodId paymentMethodId exclusion id.
///
- (void)addExcludedPaymentMethod:(NSString * _Nonnull)paymentMethodId;
/// Add exclusion list by payment method id. If you exclude it, it’s not going appear as a payment method available on checkout.
/// \param paymentMethodIds paymentMethodId exclusion id.
///
- (void)setExcludedPaymentMethods:(NSArray<NSString *> * _Nonnull)paymentMethodIds;
/// Add exclusion by payment type
/// If you exclude it, it’s not going appear as a payment method available on checkout
/// \param paymentTypeId paymentTypeId exclusion type
///
- (void)addExcludedPaymentType:(NSString * _Nonnull)paymentTypeId;
/// Add exclusion list by payment type
/// If you exclude it, it’s not going appear as a payment method available on checkout
/// \param paymentTypeIds paymentTypeIds exclusion list.
///
- (void)setExcludedPaymentTypes:(NSArray<NSString *> * _Nonnull)paymentTypeIds;
/// This value limits the amount of installments to be shown by the user.
/// \param maxInstallments max installments to be shown
///
- (void)setMaxInstallments:(NSInteger)maxInstallments;
/// When default installments is not null
/// then this value will be forced as installment selected if it matches
/// with one provided by the Installments service.
/// \param defaultInstallments number of the value to be forced
///
- (void)setDefaultInstallments:(NSInteger)defaultInstallments;
/// Default paymetMethodId selection.
/// WARNING: This is an internal method not intended for public use.
/// It is not considered part of the public API.
/// \param paymetMethodId Payment method ID to make default.
///
- (void)setDefaultPaymentMethodId:(NSString * _Nonnull)paymetMethodId;
/// Default cardId selection.
/// WARNING: This is an internal method not intended for public use.
/// It is not considered part of the public API. Only to support Moneyin feature.
/// \param paymetMethodId cardId to autoselection Moneyin feature.
///
- (void)setCardIdWithCardId:(NSString * _Nonnull)cardId;
@end


@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// getId
- (NSString * _Nonnull)getId SWIFT_WARN_UNUSED_RESULT;
/// getItems
- (NSArray<PXItem *> * _Nullable)getItems SWIFT_WARN_UNUSED_RESULT;
/// getSiteId
- (NSString * _Nonnull)getSiteId SWIFT_WARN_UNUSED_RESULT;
/// getExpirationDate
- (NSDate * _Nullable)getExpirationDate SWIFT_WARN_UNUSED_RESULT;
/// getActiveFromDate
- (NSDate * _Nullable)getActiveFromDate SWIFT_WARN_UNUSED_RESULT;
/// getExcludedPaymentTypesIds
- (NSArray<NSString *> * _Nonnull)getExcludedPaymentTypesIds SWIFT_WARN_UNUSED_RESULT;
/// getMaxAcceptedInstallments
- (NSInteger)getMaxAcceptedInstallments SWIFT_WARN_UNUSED_RESULT;
/// getExcludedPaymentMethodsIds
- (NSArray<NSString *> * _Nonnull)getExcludedPaymentMethodsIds SWIFT_WARN_UNUSED_RESULT;
/// getDefaultPaymentMethodId
- (NSString * _Nullable)getDefaultPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
/// getTotalAmount
- (double)getTotalAmount SWIFT_WARN_UNUSED_RESULT;
@end


/// This class to provides information (like <code>PXPaymentData</code> or <code>PXCheckoutPreference</code>) about our Checkout.
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXCheckoutStore")
@interface PXCheckoutStore : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class PXPaymentData;

@interface PXCheckoutStore (SWIFT_EXTENSION(MercadoPagoSDK))
/// Get <code>PXPaymentData</code> object.
- (PXPaymentData * _Nonnull)getPaymentData SWIFT_WARN_UNUSED_RESULT;
/// Get list of <code>PXPaymentData</code> for split payment.
- (NSArray<PXPaymentData *> * _Nonnull)getPaymentDatas SWIFT_WARN_UNUSED_RESULT;
/// Get <code>PXCheckoutPreference</code> object.
- (PXCheckoutPreference * _Nullable)getCheckoutPreference SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXCheckoutStore (SWIFT_EXTENSION(MercadoPagoSDK))
/// Add key-value data.
/// \param forKey Key to save. Type: <code>String</code>
///
/// \param value Value to save. Type: <code>Any</code>
///
- (void)addDataForKey:(NSString * _Nonnull)forKey value:(id _Nonnull)value;
/// Remove data for key.
/// \param key Key to remove.
///
- (void)removeWithKey:(NSString * _Nonnull)key;
/// Clear all key-values.
- (void)removeAll;
/// Get data for key.
/// \param forKey Key to get data.
///
- (id _Nullable)getDataForKey:(NSString * _Nonnull)forKey SWIFT_WARN_UNUSED_RESULT;
@end

@protocol PXFlowBehaviourProtocol;

/// :nodoc
SWIFT_CLASS("_TtC14MercadoPagoSDK21PXConfiguratorManager")
@interface PXConfiguratorManager : NSObject
+ (void)withBiometric:(id <PXBiometricProtocol> _Nonnull)biometricProtocol;
+ (void)withFlowBehaviourProtocol:(id <PXFlowBehaviourProtocol> _Nonnull)flowBehaviourProtocol;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXCurrency")
@interface PXCurrency : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK24PXCustomOptionSearchItem")
@interface PXCustomOptionSearchItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc
typedef SWIFT_ENUM(NSInteger, PXCustomTranslationKey, closed) {
  PXCustomTranslationKeyTotal_to_pay = 0,
  PXCustomTranslationKeyTotal_to_pay_onetap = 1,
  PXCustomTranslationKeyHow_to_pay = 2,
  PXCustomTranslationKeyPay_button = 3,
  PXCustomTranslationKeyPay_button_progress = 4,
};


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXCustomer")
@interface PXCustomer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXDevice")
@interface PXDevice : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXDeviceId")
@interface PXDeviceId : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK21PXDifferentialPricing")
@interface PXDifferentialPricing : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Model object that represents the discount which will be applied to a payment.
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXDiscount")
@interface PXDiscount : NSObject
/// Builder for discount construction.
/// This discount have to be created in Mercado Pago.
/// \param id Discount id
///
/// \param name Discount name (Optional)
///
/// \param percentOff Number of percent off.
///
/// \param amountOff Number of amount off.
///
/// \param couponAmount Coupon amount value.
///
/// \param currencyId Currency id string symbol.
///
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id name:(NSString * _Nullable)name percentOff:(double)percentOff amountOff:(double)amountOff couponAmount:(double)couponAmount currencyId:(NSString * _Nullable)currencyId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSDecimalNumber;

@interface PXDiscount (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDecimalNumber * _Nullable)getCouponAmount SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXDiscount (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Configuration related to Mercadopago discounts and campaigns. More details: <code>PXDiscount</code> and <code>PXCampaign</code>.
SWIFT_CLASS("_TtC14MercadoPagoSDK23PXDiscountConfiguration")
@interface PXDiscountConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// Set Mercado Pago discount that will be applied to total amount.
/// When you set a discount with its campaign, we do not check in discount service.
/// You have to set a payment processor for discount be applied.
/// \param discount Mercado Pago discount.
///
/// \param campaign Discount campaign with discount data.
///
- (nonnull instancetype)initWithDiscount:(PXDiscount * _Nonnull)discount campaign:(PXCampaign * _Nonnull)campaign OBJC_DESIGNATED_INITIALIZER;
/// When you have the user have wasted all the discounts available
/// this kind of configuration will show a generic message to the user.
+ (PXDiscountConfiguration * _Nonnull)initForNotAvailableDiscount SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC14MercadoPagoSDK29PXDiscountParamsConfiguration")
@interface PXDiscountParamsConfiguration : NSObject
/// Set additional data needed to apply a specific discount.
/// \param labels Additional data needed to apply a specific discount.
///
/// \param productId Let us to enable discounts for the product id specified.
///
- (nonnull instancetype)initWithLabels:(NSArray<NSString *> * _Nonnull)labels productId:(NSString * _Nonnull)productId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK17PXDiscountTracker")
@interface PXDiscountTracker : NSObject <MLBusinessDiscountTrackerProtocol>
- (void)trackWithAction:(NSString * _Nonnull)action eventData:(NSDictionary<NSString *, id> * _Nonnull)eventData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PXDynamicViewControllerPosition, closed) {
  PXDynamicViewControllerPositionDID_ENTER_REVIEW_AND_CONFIRM = 0,
  PXDynamicViewControllerPositionDID_TAP_ONETAP_HEADER = 1,
};

@class UIViewController;
@class PXPluginNavigationHandler;

SWIFT_PROTOCOL("_TtP14MercadoPagoSDK31PXDynamicViewControllerProtocol_")
@protocol PXDynamicViewControllerProtocol <NSObject>
- (UIViewController * _Nullable)viewControllerWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
- (enum PXDynamicViewControllerPosition)positionWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
@optional
- (void)navigationHandlerWithNavigationHandler:(PXPluginNavigationHandler * _Nonnull)navigationHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXError")
@interface PXError : NSError
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXFeeDetail")
@interface PXFeeDetail : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXFinancialInstitution")
@interface PXFinancialInstitution : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXFingerprint")
@interface PXFingerprint : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum PXResultKey : NSInteger;

SWIFT_PROTOCOL("_TtP14MercadoPagoSDK23PXFlowBehaviourProtocol_")
@protocol PXFlowBehaviourProtocol <NSObject>
- (void)trackConversion;
- (void)trackConversionWithResult:(enum PXResultKey)result;
@end

enum RemotePaymentStatus : NSInteger;

/// Use this object to notify your own custom payment using <code>PXPaymentProcessor</code>.
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXGenericPayment")
@interface PXGenericPayment : NSObject <PXBasePayment>
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
/// id related to your payment.
@property (nonatomic, readonly, copy) NSString * _Nullable paymentId;
/// Status of your payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
/// Status detail of your payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull statusDetail;
/// Payment method type id.
@property (nonatomic, readonly, copy) NSString * _Nullable paymentMethodId;
/// Payment method type id.
@property (nonatomic, readonly, copy) NSString * _Nullable paymentMethodTypeId;
/// \param status Status of payment.
///
/// \param statusDetail Status detail of payment.
///
/// \param paymentId Id of payment.
///
- (nonnull instancetype)initWithStatus:(NSString * _Nonnull)status statusDetail:(NSString * _Nonnull)statusDetail paymentId:(NSString * _Nullable)paymentId OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (nonnull instancetype)initWithPaymentStatus:(enum RemotePaymentStatus)paymentStatus statusDetail:(NSString * _Nonnull)statusDetail receiptId:(NSString * _Nullable)receiptId OBJC_DESIGNATED_INITIALIZER;
/// \param status Status of payment.
///
/// \param statusDetail Status detail of payment.
///
/// \param paymentId Id of payment.
///
/// \param paymentMethodId Payment Method id.
///
/// \param paymentMethodTypeId Payment Type Id.
///
- (nonnull instancetype)initWithStatus:(NSString * _Nonnull)status statusDetail:(NSString * _Nonnull)statusDetail paymentId:(NSString * _Nullable)paymentId paymentMethodId:(NSString * _Nullable)paymentMethodId paymentMethodTypeId:(NSString * _Nullable)paymentMethodTypeId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, RemotePaymentStatus, closed) {
  RemotePaymentStatusAPPROVED = 0,
  RemotePaymentStatusREJECTED = 1,
};


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXIdentification")
@interface PXIdentification : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXIdentificationType")
@interface PXIdentificationType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXInstallment")
@interface PXInstallment : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXInstruction")
@interface PXInstruction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK19PXInstructionAction")
@interface PXInstructionAction : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK24PXInstructionInteraction")
@interface PXInstructionInteraction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXInstructionReference")
@interface PXInstructionReference : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK14PXInstructions")
@interface PXInstructions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXIssuer")
@interface PXIssuer : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id name:(NSString * _Nullable)name OBJC_DESIGNATED_INITIALIZER;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXIssuer * _Nullable)fromJSONToPXIssuerWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PXIssuer *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXIssuer (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
@end



/// Model object representing the Item.
SWIFT_CLASS("_TtC14MercadoPagoSDK6PXItem")
@interface PXItem : NSObject
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable categoryId;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable currencyId;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable _description;
/// :nodoc:
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable pictureUrl;
/// :nodoc:
@property (nonatomic) NSInteger quantity;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nonnull title;
/// :nodoc:
@property (nonatomic) double unitPrice;
/// Builder for item construction.
/// It should be used when checkout initialize without a preference id and
/// it is initialize with a preference created programmatically.
/// \param title Item title.
///
/// \param quantity Item quantity.
///
/// \param unitPrice Item price.
///
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title quantity:(NSInteger)quantity unitPrice:(double)unitPrice OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (PXItem * _Nullable)fromJSONToPXItemWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (NSArray<PXItem *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface PXItem (SWIFT_EXTENSION(MercadoPagoSDK))
/// setId
/// \param id ID.
///
- (void)setIdWithId:(NSString * _Nonnull)id;
/// setDescription
/// \param description Description.
///
- (void)setDescriptionWithDescription:(NSString * _Nonnull)description;
/// setPictureURL
/// \param url Url remote picture.
///
- (void)setPictureURLWithUrl:(NSString * _Nonnull)url;
/// setCategoryId
/// \param categoryId Category id.
///
- (void)setCategoryIdWithCategoryId:(NSString * _Nonnull)categoryId;
@end


@interface PXItem (SWIFT_EXTENSION(MercadoPagoSDK))
/// getQuantity
- (NSInteger)getQuantity SWIFT_WARN_UNUSED_RESULT;
/// getUnitPrice
- (double)getUnitPrice SWIFT_WARN_UNUSED_RESULT;
/// getTitle
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
/// getId
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
/// getDescription
- (NSString * _Nullable)getDescription SWIFT_WARN_UNUSED_RESULT;
/// getCategoryId
- (NSString * _Nullable)getCategoryId SWIFT_WARN_UNUSED_RESULT;
/// getPictureURL
- (NSString * _Nullable)getPictureURL SWIFT_WARN_UNUSED_RESULT;
@end


/// Use <code>PXLazyInitProtocol</code> to start the checkout init services in lazy mode (without UI). Implement this protocol and keep you informed when the checkout is ready to launch.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK18PXLazyInitProtocol_")
@protocol PXLazyInitProtocol <NSObject>
/// Init checkout methods finished. The checkout is ready to start. You receive the <code>MercadoPagoCheckout</code> reference.
/// \param checkout Checkout reference.
///
- (void)didFinishWithCheckout:(MercadoPagoCheckout * _Nonnull)checkout;
/// Init checkout methods fail.
/// \param checkout Checkout reference.
///
- (void)failureWithCheckout:(MercadoPagoCheckout * _Nonnull)checkout;
@end


/// Implement this protocol in order to keep you informed about important actions in our checkout life cycle.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19PXLifeCycleProtocol_")
@protocol PXLifeCycleProtocol <NSObject>
/// User cancel checkout. By any cancel UI button or back navigation action. You can return an optional block, to override the default exit cancel behavior. Default exit cancel behavior is back navigation stack.
- (void (^ _Nullable)(void))cancelCheckout SWIFT_WARN_UNUSED_RESULT;
/// You can return an optional block, to override the default (pop to root) exit behavior.
/// Your block must have a pxresult as parameter, that represent a payment or business result to be informed.
- (void (^ _Nullable)(id <PXResult> _Nullable))finishCheckout SWIFT_WARN_UNUSED_RESULT;
@optional
/// User tap on our change payment method action. If you return a block,
/// you can override the change payment method action. For example to
/// go to specific viewController, etc. (Only moneyIn use case)
/// warning:
/// This is and internal method. Use it at your own risk.
/// :nodoc:
- (void (^ _Nullable)(void))changePaymentMethodTapped SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK26PXOfflineMethodsCompliance")
@interface PXOfflineMethodsCompliance : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXOneTapCard")
@interface PXOneTapCard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXOneTapCardDto")
@interface PXOneTapCardDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXOneTapDto")
@interface PXOneTapDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXOneTapItem")
@interface PXOneTapItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC14MercadoPagoSDK18PXOneTapNewCardDto")
@interface PXOneTapNewCardDto : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXOrder")
@interface PXOrder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXPayer")
@interface PXPayer : NSObject <NSCopying>
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable accessToken;
@property (nonatomic, strong) PXIdentification * _Nullable identification;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable entityType;
@property (nonatomic, copy) NSString * _Nonnull email;
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable legalName;
- (nonnull instancetype)initWithId:(NSString * _Nullable)id accessToken:(NSString * _Nullable)accessToken identification:(PXIdentification * _Nullable)identification type:(NSString * _Nullable)type entityType:(NSString * _Nullable)entityType email:(NSString * _Nonnull)email firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName legalName:(NSString * _Nullable)legalName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEmail:(NSString * _Nonnull)email OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface PXPayer (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXPayer * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXPayer (SWIFT_EXTENSION(MercadoPagoSDK))
- (void)setIdWithPayerId:(NSString * _Nonnull)payerId;
- (void)setIdentificationWithIdentification:(PXIdentification * _Nonnull)identification;
- (void)setEntityTypeWithEntityType:(NSString * _Nonnull)entityType;
- (void)setFirstNameWithName:(NSString * _Nonnull)name;
- (void)setLastNameWithLastName:(NSString * _Nonnull)lastName;
- (void)setLegalNameWithLastName:(NSString * _Nonnull)lastName;
@end


@interface PXPayer (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nonnull)getEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
- (PXIdentification * _Nullable)getIdentification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getEntityType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getFirstName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLastName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLegalName SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK17PXPayerCompliance")
@interface PXPayerCompliance : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXPayerCost")
@interface PXPayerCost : NSObject
@property (nonatomic) double installmentRate;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull labels;
@property (nonatomic) double minAllowedAmount;
@property (nonatomic) double maxAllowedAmount;
@property (nonatomic, copy) NSString * _Nullable recommendedMessage;
@property (nonatomic) double installmentAmount;
@property (nonatomic) double totalAmount;
@property (nonatomic) NSInteger installments;
@property (nonatomic, copy) NSString * _Nullable processingMode;
@property (nonatomic, copy) NSString * _Nullable paymentMethodOptionId;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXPayerCost * _Nullable)fromJSONToPXPayerCostWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PXPayerCost *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class PXRefund;
@class PXTransactionDetails;

/// This is our Payment object. When we make the payment, we return this object in the checkout exit. More details in: <code>PXLifeCycleProtocol</code> finishCheckout method.
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXPayment")
@interface PXPayment : NSObject <PXBasePayment>
/// callForAuthorizeId
@property (nonatomic, copy) NSString * _Nullable callForAuthorizeId;
/// card
@property (nonatomic, strong) PXCard * _Nullable card;
/// currencyId
@property (nonatomic, copy) NSString * _Nullable currencyId;
/// dateApproved
@property (nonatomic, copy) NSDate * _Nullable dateApproved;
/// dateCreated
@property (nonatomic, copy) NSDate * _Nullable dateCreated;
/// dateLastUpdated
@property (nonatomic, copy) NSDate * _Nullable dateLastUpdated;
/// description
@property (nonatomic, copy) NSString * _Nullable _description;
/// externalReference
@property (nonatomic, copy) NSString * _Nullable externalReference;
/// feesDetails
@property (nonatomic, copy) NSArray<PXFeeDetail *> * _Nullable feeDetails;
/// paymentId
@property (nonatomic) int64_t id;
/// issuer
@property (nonatomic, copy) NSString * _Nullable issuerId;
/// metadata
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable metadata;
/// moneyReleaseDate
@property (nonatomic, copy) NSDate * _Nullable moneyReleaseDate;
/// notificationUrl
@property (nonatomic, copy) NSString * _Nullable notificationUrl;
/// operationType
@property (nonatomic, copy) NSString * _Nullable operationType;
/// order
@property (nonatomic, strong) PXOrder * _Nullable order;
/// payer
@property (nonatomic, strong) PXPayer * _Nullable payer;
/// paymentMethodId
@property (nonatomic, copy) NSString * _Nullable paymentMethodId;
/// paymentTypeId
@property (nonatomic, copy) NSString * _Nullable paymentTypeId;
/// refunds
@property (nonatomic, copy) NSArray<PXRefund *> * _Nullable refunds;
/// statementDescriptor
@property (nonatomic, copy) NSString * _Nullable statementDescriptor;
/// status
@property (nonatomic, copy) NSString * _Nonnull status;
/// statusDetail
@property (nonatomic, copy) NSString * _Nonnull statusDetail;
/// transactionDetails
@property (nonatomic, strong) PXTransactionDetails * _Nullable transactionDetails;
/// tokenId
@property (nonatomic, copy) NSString * _Nullable tokenId;
/// :nodoc:
- (NSDate * _Nullable)getDateFromString:(NSString * _Nullable)string SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (PXPayment * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (BOOL)isCardPaymentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXPayment (SWIFT_EXTENSION(MercadoPagoSDK))
@end


@interface PXPayment (SWIFT_EXTENSION(MercadoPagoSDK))
/// Payment Id getter (String)
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
/// Status getter
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
/// Status detail getter
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
@end

@protocol PXPaymentProcessor;
@protocol PXSplitPaymentProcessor;

/// Any configuration related to the Payment. You can set you own <code>PXPaymentProcessor</code>. Configuration of discounts, charges and custom Payment Method Plugin.
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXPaymentConfiguration")
@interface PXPaymentConfiguration : NSObject
/// Builder for <code>PXPaymentConfiguration</code> construction.
/// \param paymentProcessor Your custom implementation of <code>PXPaymentProcessor</code>.
///
- (nonnull instancetype)initWithPaymentProcessor:(id <PXPaymentProcessor> _Nonnull)paymentProcessor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSplitPaymentProcessor:(id <PXSplitPaymentProcessor> _Nonnull)splitPaymentProcessor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class PXPaymentMethodPlugin;
@class PXPaymentTypeChargeRule;

@interface PXPaymentConfiguration (SWIFT_EXTENSION(MercadoPagoSDK))
/// Add your own payment method option to pay.
/// \param plugin Your custom payment method plugin.
///
- (PXPaymentConfiguration * _Nonnull)addPaymentMethodPluginWithPlugin:(PXPaymentMethodPlugin * _Nonnull)plugin SWIFT_WARN_UNUSED_RESULT;
/// Add extra charges that will apply to total amount.
/// \param charges the list (array) of charges that could apply.
///
- (PXPaymentConfiguration * _Nonnull)addChargeRulesWithCharges:(NSArray<PXPaymentTypeChargeRule *> * _Nonnull)charges SWIFT_WARN_UNUSED_RESULT;
/// <code>PXDiscountConfiguration</code> is an object that represents the discount to be applied or error information to present to the user. It’s mandatory to handle your discounts by hand if you set a payment processor.
/// \param config Your custom discount configuration
///
- (PXPaymentConfiguration * _Nonnull)setDiscountConfigurationWithConfig:(PXDiscountConfiguration * _Nonnull)config SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
@end


/// Data needed for payment.
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXPaymentData")
@interface PXPaymentData : NSObject <NSCopying>
/// :nodoc:
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






@class PXToken;
@class PXPaymentMethod;

@interface PXPaymentData (SWIFT_EXTENSION(MercadoPagoSDK))
/// getToken
- (PXToken * _Nullable)getToken SWIFT_WARN_UNUSED_RESULT;
/// getPayerCost
- (PXPayerCost * _Nullable)getPayerCost SWIFT_WARN_UNUSED_RESULT;
/// getNumberOfInstallments
- (NSInteger)getNumberOfInstallments SWIFT_WARN_UNUSED_RESULT;
/// getIssuer
- (PXIssuer * _Nullable)getIssuer SWIFT_WARN_UNUSED_RESULT;
/// getPayer
- (PXPayer * _Nullable)getPayer SWIFT_WARN_UNUSED_RESULT;
/// getPaymentMethod
- (PXPaymentMethod * _Nullable)getPaymentMethod SWIFT_WARN_UNUSED_RESULT;
/// getDiscount
- (PXDiscount * _Nullable)getDiscount SWIFT_WARN_UNUSED_RESULT;
/// getRawAmount
- (NSDecimalNumber * _Nullable)getRawAmount SWIFT_WARN_UNUSED_RESULT;
@end

@class PXSetting;

/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXPaymentMethod")
@interface PXPaymentMethod : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nullable additionalInfoNeeded;
@property (nonatomic, copy) NSString * _Null_unspecified id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nonnull paymentTypeId;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable secureThumbnail;
@property (nonatomic, copy) NSString * _Nullable thumbnail;
@property (nonatomic, copy) NSString * _Nullable deferredCapture;
@property (nonatomic, copy) NSArray<PXSetting *> * _Nonnull settings;
@property (nonatomic, copy) NSString * _Nullable merchantAccountId;
@property (nonatomic, copy) NSArray<PXFinancialInstitution *> * _Nullable financialInstitutions;
@property (nonatomic, strong) NSData * _Nullable externalPaymentPluginImageData;
@property (nonatomic, copy) NSString * _Nullable paymentMethodDescription;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable processingModes;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXPaymentMethod * _Nullable)fromJSONToPXPaymentMethodWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PXPaymentMethod *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXPaymentMethod (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
@end



@interface PXPaymentMethod (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSInteger)cardNumberLenght SWIFT_WARN_UNUSED_RESULT;
- (BOOL)secCodeInBack SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isOnlinePaymentMethod;
@end


/// Implement this Protocol to show and optional screen <code>UIViewController</code> in your custom payment method flow. (Configure custom payment method step). We push this screen after you choose the means of payment.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK29PXPaymentMethodConfigProtocol_")
@protocol PXPaymentMethodConfigProtocol
/// Define your custom config screen ViewController.
- (UIViewController * _Nullable)configViewController SWIFT_WARN_UNUSED_RESULT;
/// Use this method to decide whether the screen should show or not.
/// \param store <code>PXCheckoutStore</code> reference. Use it to check scenarios/data.
///
- (BOOL)shouldSkipWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to receive the <code>PXCheckoutStore</code> data and current theme <code>PXTheme</code>.
/// \param checkoutStore <code>PXCheckoutStore</code> reference.
///
/// \param theme <code>PXTheme</code> current protocol.
///
- (void)didReceiveWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore theme:(id <PXTheme> _Nonnull)theme;
/// Optional method to receive the plugin navigation handler. Use this to execute next screen, show loading, etc.
/// \param navigationHandler <code>PXPluginNavigationHandler</code> reference.
///
- (void)navigationHandlerWithNavigationHandler:(PXPluginNavigationHandler * _Nonnull)navigationHandler;
@end


/// Use to create yout custom payment option. We´ll display this option in the payment method selection screen.
SWIFT_CLASS("_TtC14MercadoPagoSDK21PXPaymentMethodPlugin")
@interface PXPaymentMethodPlugin : NSObject
/// Builder construction.
/// \param paymentMethodPluginId Id for your custom payment method.
///
/// \param name Name for your custom payment method.
///
/// \param image Image icon for your custom payment method.
///
/// \param description Description for your custom payment method.
///
- (nonnull instancetype)initWithPaymentMethodPluginId:(NSString * _Nonnull)paymentMethodPluginId name:(NSString * _Nonnull)name image:(UIImage * _Nonnull)image description:(NSString * _Nullable)description OBJC_DESIGNATED_INITIALIZER;
/// Async block to initialize your payment method plugin.
@property (nonatomic, copy) void (^ _Nonnull initPaymentMethodPlugin)(PXCheckoutStore * _Nonnull, void (^ _Nonnull)(BOOL));
- (void (^ _Nonnull)(PXCheckoutStore * _Nonnull, void (^ _Nonnull)(BOOL)))initPaymentMethodPlugin SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Determinate if your payment method plugin should be show.
@property (nonatomic, copy) BOOL (^ _Nonnull mustShowPaymentMethodPlugin)(PXCheckoutStore * _Nonnull);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, DisplayOrder, closed) {
  DisplayOrderTOP = 0,
  DisplayOrderBOTTOM = 1,
};



@interface PXPaymentMethodPlugin (SWIFT_EXTENSION(MercadoPagoSDK))
/// Set config screen for payment method. Implementing <code>PXPaymentMethodConfigProtocol</code>
/// \param config PXPaymentMethodConfigProtocol implementation.
///
- (void)setPaymentMethodConfigWithConfig:(id <PXPaymentMethodConfigProtocol> _Nonnull)config;
/// Set display order for your custom payment method. The values are <code>TOP</code> or <code>BOTTOM</code>.
/// \param order Display order value.
///
- (void)setDisplayOrderWithOrder:(enum DisplayOrder)order;
@end


@interface PXPaymentMethodPlugin (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nonnull)getId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDescription SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getComment SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasChildren SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCard SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCustomerPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getImage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSubtitle SWIFT_WARN_UNUSED_RESULT;
- (void)setDescription:(NSString * _Nullable)text;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK25PXPaymentMethodSearchItem")
@interface PXPaymentMethodSearchItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK30PXPaymentMethodSearchItemTypes")
@interface PXPaymentMethodSearchItemTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK19PXPaymentPreference")
@interface PXPaymentPreference : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class PXPaymentProcessorNavigationHandler;
@protocol PXPaymentProcessorErrorHandler;

/// Implement this protocol to create your custom Payment Processor.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK18PXPaymentProcessor_")
@protocol PXPaymentProcessor <NSObject>
/// ViewController associated to your Payment Processor. This is optional VC. If you need a screen to make the payment, return your Payment processor viewController. If you return nil, we use our custom Animated progress Button.
- (UIViewController * _Nullable)paymentProcessorViewController SWIFT_WARN_UNUSED_RESULT;
/// Use this method to decide if your Payment Processor support the Payment.
- (BOOL)support SWIFT_WARN_UNUSED_RESULT;
@optional
/// Receive a navigation handler for your custom Payment Processor. <code>PXPaymentProcessorNavigationHandler</code>. If you create your custom vieeController to make the payment, you should use it this handler.
/// \param navigationHandler Navigation handler -> <code>PXPaymentProcessorNavigationHandler</code>
///
- (void)didReceiveWithNavigationHandler:(PXPaymentProcessorNavigationHandler * _Nonnull)navigationHandler;
/// Receive a reference to checkout store with: <code>PXPaymentData</code> and <code>PXCheckoutPreference</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
- (void)didReceiveWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore;
/// Method that we will call if <code>paymentProcessorViewController()</code> is nil. You can return the data of your custom payment. You can return a <code>PXGenericPayment</code> or <code>PXBusinessResult</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
/// \param errorHandler Use to receive an error handler.
///
/// \param successWithBusinessResult Use to return a custom PXBusinessResult.
///
/// \param successWithPaymentResult Use to return a simple payment PXGenericPayment.
///
- (void)startPaymentWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore errorHandler:(id <PXPaymentProcessorErrorHandler> _Nonnull)errorHandler successWithBusinessResult:(void (^ _Nonnull)(PXBusinessResult * _Nonnull))successWithBusinessResult successWithPaymentResult:(void (^ _Nonnull)(PXGenericPayment * _Nonnull))successWithPaymentResult;
/// Optional method to inform your Payment timeout. (This is the timeout of your payment backend). Define this value for a superb checkout animated progress button experience.
- (double)paymentTimeOut SWIFT_WARN_UNUSED_RESULT;
@end


/// Handler protocol to manage wrong scenarios related with your custom Processor
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK30PXPaymentProcessorErrorHandler_")
@protocol PXPaymentProcessorErrorHandler <NSObject>
/// Use this method to make a shake action on the loading progress payment button and change the color to red
- (void)showError;
@end


/// Navigation handler to manage communication between your Processor and our Checkout. You should use this navigation handler only with custom Processor view. When you use a custom <code>UIViewController</code> to present your own view, you can use this Object in order to notify: <code>didFinishPayment</code>, <code>showLoading</code>, <code>hideLoading</code>.
SWIFT_CLASS("_TtC14MercadoPagoSDK35PXPaymentProcessorNavigationHandler")
@interface PXPaymentProcessorNavigationHandler : NSObject
/// Notify that your custom payment was finish. Send your custom <code>PXBusinessResult</code> object.
/// \param businessResult Your custom <code>PXBusinessResult</code>.
///
- (void)didFinishPaymentWithBusinessResult:(PXBusinessResult * _Nonnull)businessResult;
/// :nodoc:
- (void)didFinishPaymentWithPaymentStatus:(enum RemotePaymentStatus)paymentStatus statusDetails:(NSString * _Nonnull)statusDetails paymentId:(NSString * _Nullable)paymentId;
/// Notify that your payment was finish. Send a default Payment.
/// \param status Status of your payment.
///
/// \param statusDetail Status detail of your payment.
///
/// \param paymentId Id of your payment.
///
- (void)didFinishPaymentWithStatus:(NSString * _Nonnull)status statusDetail:(NSString * _Nonnull)statusDetail paymentId:(NSString * _Nullable)paymentId;
/// Call to Checkout next screen.
- (void)next;
/// Call to Checkout next screen and remove current screen from stack.
- (void)nextAndRemoveCurrentScreenFromStack;
/// Show our Checkout loading full screen.
- (void)showLoading;
/// Hide our Checkout loading full screen.
- (void)hideLoading;
/// Close checkout.
/// :nodoc:
- (void)close;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// This object declares custom preferences (customizations) for “Congrats” screen.
SWIFT_CLASS("_TtC14MercadoPagoSDK28PXPaymentResultConfiguration")
@interface PXPaymentResultConfiguration : NSObject
/// :nodoc:
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// Define your custom UIViews. <code>topView</code> and <code>bottomView</code> of the screen.
/// \param topView Optional custom top view.
///
/// \param bottomView Optional custom bottom view.
///
- (nonnull instancetype)initWithTopView:(UIView * _Nullable)topView bottomView:(UIView * _Nullable)bottomView OBJC_DESIGNATED_INITIALIZER;
@end


@class NSBundle;

@interface PXPaymentResultConfiguration (SWIFT_EXTENSION(MercadoPagoSDK))
- (void)shouldShowBadgeImage SWIFT_DEPRECATED;
- (void)hideBadgeImage SWIFT_DEPRECATED;
- (void)shouldShowLabelText SWIFT_DEPRECATED;
- (void)hideLabelText SWIFT_DEPRECATED;
- (UIImage * _Nullable)getApprovedBadgeImage SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)disableApprovedLabelText SWIFT_DEPRECATED;
- (void)setApprovedWithLabelText:(NSString * _Nonnull)labelText SWIFT_DEPRECATED;
- (NSString * _Nullable)getApprovedLabelText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)setApprovedWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setApprovedSubtitleWithSubtitle:(NSString * _Nonnull)subtitle SWIFT_DEPRECATED;
- (void)setApprovedHeaderIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (void)setApprovedHeaderIconWithStringURL:(NSString * _Nonnull)stringURL SWIFT_DEPRECATED;
- (void)disablePendingLabelText SWIFT_DEPRECATED;
- (void)setPendingWithLabelText:(NSString * _Nonnull)labelText SWIFT_DEPRECATED;
- (NSString * _Nullable)getPendingLabelText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)setPendingWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setPendingSubtitleWithSubtitle:(NSString * _Nonnull)subtitle SWIFT_DEPRECATED;
- (void)setPendingHeaderIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (void)setPendingHeaderIconWithStringURL:(NSString * _Nonnull)stringURL SWIFT_DEPRECATED;
- (void)setPendingContentTextWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED;
- (void)setPendingContentTitleWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)disablePendingSecondaryExitButton SWIFT_DEPRECATED;
- (void)disablePendingContentText SWIFT_DEPRECATED;
- (void)disablePendingContentTitle SWIFT_DEPRECATED;
- (void)setRejectedWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setRejectedSubtitleWithSubtitle:(NSString * _Nonnull)subtitle SWIFT_DEPRECATED;
- (void)setRejectedHeaderIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (void)setRejectedHeaderIconWithStringURL:(NSString * _Nonnull)stringURL SWIFT_DEPRECATED;
- (void)setRejectedContentTextWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED;
- (void)setRejectedContentTitleWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)disableRejectedLabel SWIFT_DEPRECATED;
- (void)setRejectedIconSubtextWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED;
- (void)disableRejectdSecondaryExitButton SWIFT_DEPRECATED;
- (void)disableRejectedContentText SWIFT_DEPRECATED;
- (void)disableRejectedContentTitle SWIFT_DEPRECATED;
- (void)setExitButtonTitleWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setStatusBackgroundColorWithColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED;
- (UIColor * _Nullable)getStatusBackgroundColor SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)disableContentCell SWIFT_DEPRECATED;
- (void)disableApprovedBodyCell SWIFT_DEPRECATED;
- (void)disableApprovedAmount SWIFT_DEPRECATED;
- (void)disableApprovedReceipt SWIFT_DEPRECATED;
- (void)disableApprovedPaymentMethodInfo SWIFT_DEPRECATED;
- (void)enableAmount SWIFT_DEPRECATED;
- (void)enableApprovedReceipt SWIFT_DEPRECATED;
- (void)enableContnentCell SWIFT_DEPRECATED;
- (void)enableApprovedPaymentBodyCell SWIFT_DEPRECATED;
- (void)enablePaymentContentText SWIFT_DEPRECATED;
- (void)enablePaymentContentTitle SWIFT_DEPRECATED;
- (void)enableApprovedPaymentMethodInfo SWIFT_DEPRECATED;
- (NSString * _Nonnull)getApprovedTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getApprovedSubtitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getApprovedSecondaryButtonText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderApprovedIcon SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingSubtitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderPendingIcon SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingContetTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingContentText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nullable)getPendingSecondaryButtonText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPendingSecondaryExitButtonDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPendingContentTextDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPendingContentTitleDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedSubtitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)setHeaderRejectedIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderRejectedIcon:(PXPaymentMethod * _Nullable)paymentMethod SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderImageFor:(PXPaymentMethod * _Nullable)paymentMethod SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedContetTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedContentText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedIconSubtext SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nullable)getRejectedSecondaryButtonText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isRejectedSecondaryExitButtonDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isRejectedContentTextDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isRejectedContentTitleDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nullable)getExitButtonTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isContentCellDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isApprovedPaymentBodyDisableCell SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPaymentMethodDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isAmountDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPaymentIdDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXPaymentType")
@interface PXPaymentType : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Use this object to apply a charge related to a payment type. The relationship is by <code>paymentTypeId</code>. You can specify a default <code>amountCharge</code> for each payment method.
SWIFT_CLASS("_TtC14MercadoPagoSDK23PXPaymentTypeChargeRule")
@interface PXPaymentTypeChargeRule : NSObject
- (nonnull instancetype)initWithPaymentMethdodId:(NSString * _Nonnull)paymentMethdodId amountCharge:(double)amountCharge SWIFT_DEPRECATED_MSG("Property paymentMethdodId has been renamed to paymentTypeId");
/// \param paymentTypeId paymentTypeId for which the currrent charge applies.
///
/// \param amountCharge Amount charge for the assigned payment type.
///
/// \param detailModal Optional screen intended to be shown modally in order to give further details on why this charge applies to the current payment. This screen will pop up when the charges row is pressed.
///
- (nonnull instancetype)initWithPaymentTypeId:(NSString * _Nonnull)paymentTypeId amountCharge:(double)amountCharge detailModal:(UIViewController * _Nullable)detailModal OBJC_DESIGNATED_INITIALIZER;
/// \param paymentTypeId paymentTypeId for which the currrent charge applies.
///
/// \param message Message that is shown whenever the amount is set to zero.
///
- (nonnull instancetype)initWithPaymentTypeId:(NSString * _Nonnull)paymentTypeId message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXPhone")
@interface PXPhone : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXPicture")
@interface PXPicture : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK25PXPluginNavigationHandler")
@interface PXPluginNavigationHandler : NSObject
- (nonnull instancetype)initWithCheckout:(MercadoPagoCheckout * _Nonnull)withCheckout OBJC_DESIGNATED_INITIALIZER;
- (void)showFailureWithMessage:(NSString * _Nonnull)message errorDetails:(NSString * _Nonnull)errorDetails retryButtonCallback:(void (^ _Nullable)(void))retryButtonCallback;
- (void)next;
- (void)nextAndRemoveCurrentScreenFromStack;
- (void)cancel;
- (void)showLoading;
- (void)hideLoading;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXRefund")
@interface PXRefund : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, PXResultKey, closed) {
  PXResultKeySUCCESS = 0,
  PXResultKeyFAILURE = 1,
  PXResultKeyPENDING = 2,
};


/// This object declares custom preferences (customizations) for “Review and Confirm” screen.
SWIFT_CLASS("_TtC14MercadoPagoSDK28PXReviewConfirmConfiguration")
@interface PXReviewConfirmConfiguration : NSObject
/// :nodoc:
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// \param itemsEnabled Determinate if items view should be display or not.
///
/// \param topView Optional custom top view.
///
/// \param bottomView Optional custom bottom view.
///
- (nonnull instancetype)initWithItemsEnabled:(BOOL)itemsEnabled topView:(UIView * _Nullable)topView bottomView:(UIView * _Nullable)bottomView OBJC_DESIGNATED_INITIALIZER;
@end









SWIFT_PROTOCOL("_TtP14MercadoPagoSDK40PXReviewConfirmDynamicViewsConfiguration_")
@protocol PXReviewConfirmDynamicViewsConfiguration <NSObject>
- (NSArray<UIView *> * _Nullable)topCustomViewsWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIView *> * _Nullable)bottomCustomViewsWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXSavedCardToken")
@interface PXSavedCardToken : PXCardToken
- (BOOL)validate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCustomerPaymentMethod SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK19PXSavedESCCardToken")
@interface PXSavedESCCardToken : PXSavedCardToken
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK14PXSecurityCode")
@interface PXSecurityCode : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXSensitiveInformation")
@interface PXSensitiveInformation : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXSetting")
@interface PXSetting : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK6PXSite")
@interface PXSite : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXSplitConfiguration")
@interface PXSplitConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXSplitPaymentMethod")
@interface PXSplitPaymentMethod : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK23PXSplitPaymentProcessor_")
@protocol PXSplitPaymentProcessor <NSObject>
/// ViewController associated to your Payment Processor. This is optional VC. If you need a screen to make the payment, return your Payment processor viewController. If you return nil, we use our custom Animated progress Button.
- (UIViewController * _Nullable)paymentProcessorViewController SWIFT_WARN_UNUSED_RESULT;
/// Use this method to decide if your Payment Processor support the Payment.
- (BOOL)support SWIFT_WARN_UNUSED_RESULT;
@optional
/// Receive a navigation handler for your custom Payment Processor. <code>PXPaymentProcessorNavigationHandler</code>. If you create your custom vieeController to make the payment, you should use it this handler.
/// \param navigationHandler Navigation handler -> <code>PXPaymentProcessorNavigationHandler</code>
///
- (void)didReceiveWithNavigationHandler:(PXPaymentProcessorNavigationHandler * _Nonnull)navigationHandler;
/// Receive a reference to checkout store with: <code>PXPaymentData</code> and <code>PXCheckoutPreference</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
- (void)didReceiveWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore;
/// Method that we will call if <code>paymentProcessorViewController()</code> is nil. You can return the data of your custom payment. You can return a <code>PXGenericPayment</code> or <code>PXBusinessResult</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
/// \param errorHandler Use to receive an error handler.
///
/// \param successWithBasePayment Use to return a custom PXBasePayment.
///
- (void)startPaymentWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore errorHandler:(id <PXPaymentProcessorErrorHandler> _Nonnull)errorHandler successWithBasePayment:(void (^ _Nonnull)(id <PXBasePayment> _Nonnull))successWithBasePayment;
/// Optional method to inform your Payment timeout. (This is the timeout of your payment backend). Define this value for a superb checkout animated progress button experience.
- (double)paymentTimeOut SWIFT_WARN_UNUSED_RESULT;
@required
/// Method to inform if this payment processor supports split payment method payment.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
- (BOOL)supportSplitPaymentMethodPaymentWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to skip Review and Confirm screen/step in checkout flow.
- (BOOL)shouldSkipUserConfirmation SWIFT_WARN_UNUSED_RESULT;
@end

@class PXThemeProperty;

/// Protocol to define advanced customization of your UI.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK7PXTheme_")
@protocol PXTheme
/// Define your navigation bar color. <code>PXThemeProperty</code> background and <code>PXThemeProperty</code> tint color for font color.
- (PXThemeProperty * _Nonnull)navigationBar SWIFT_WARN_UNUSED_RESULT;
/// Full screen loading colores. <code>PXThemeProperty</code> background and <code>PXThemeProperty</code> tint color for animated spinner color.
- (PXThemeProperty * _Nonnull)loadingComponent SWIFT_WARN_UNUSED_RESULT;
/// Use this color for Revisa & Confirma screen header background color.
- (UIColor * _Nonnull)highlightBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Use this color for Revisa & Confirma body background color.
- (UIColor * _Nonnull)detailedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to override the color of navigation bar text color for highlight backgrounds.
- (UIColor * _Nullable)highlightNavigationTintColor SWIFT_WARN_UNUSED_RESULT;
@required
/// Checkout status bar style. Use the native <code>UIStatusBarStyle</code>
- (UIStatusBarStyle)statusBarStyle SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to set your custom font.
- (NSString * _Nullable)fontName SWIFT_WARN_UNUSED_RESULT;
/// Optional method to set your custom light font.
- (NSString * _Nullable)lightFontName SWIFT_WARN_UNUSED_RESULT;
/// Optional method to set your custom  semi-bold font.
- (NSString * _Nullable)semiBoldFontName SWIFT_WARN_UNUSED_RESULT;
@end


/// Use this object to create certain properties to define <code>PXTheme</code> implementation.
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXThemeProperty")
@interface PXThemeProperty : NSObject
/// \param backgroundColor Determinate the background property color.
///
/// \param tintColor Determinate the tint property color.
///
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor tintColor:(UIColor * _Nonnull)tintColor OBJC_DESIGNATED_INITIALIZER;
/// Getter for getBackgroundColor property.
- (UIColor * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Getter for getTintColor property.
- (UIColor * _Nonnull)getTintColor SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXToken")
@interface PXToken : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified id;
@property (nonatomic, copy) NSString * _Nullable publicKey;
@property (nonatomic, copy) NSString * _Nonnull cardId;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSDate * _Nullable usedDate;
@property (nonatomic) NSInteger cardNumberLength;
@property (nonatomic, copy) NSDate * _Nullable dateCreated;
@property (nonatomic) NSInteger securityCodeLength;
@property (nonatomic) NSInteger expirationMonth;
@property (nonatomic) NSInteger expirationYear;
@property (nonatomic, copy) NSDate * _Nullable dateLastUpdated;
@property (nonatomic, copy) NSDate * _Nullable dueDate;
@property (nonatomic, copy) NSString * _Nonnull firstSixDigits;
@property (nonatomic, copy) NSString * _Nonnull lastFourDigits;
@property (nonatomic, strong) PXCardHolder * _Nullable cardholder;
@property (nonatomic, copy) NSString * _Nullable esc;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXToken * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXToken (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXToken (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nullable)getCardBin SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCardLastForDigits SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isIssuerRequired SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canBeClone SWIFT_WARN_UNUSED_RESULT;
@end

@protocol PXTrackerListener;

/// Use this object to call methods related to our PX tracker.
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXTracker")
@interface PXTracker : NSObject
/// Set your own tracker listener protocol to be aware of PX-Checkout tracking events
+ (void)setListener:(id <PXTrackerListener> _Nonnull)listener;
+ (void)setListener:(id <PXTrackerListener> _Nonnull)listener flowName:(NSString * _Nullable)flowName flowDetails:(NSDictionary<NSString *, id> * _Nullable)flowDetails;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Protocol to stay notified about our tracking screens/events.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK17PXTrackerListener_")
@protocol PXTrackerListener <NSObject>
/// This method is called when a new screen is shown to the user and tracked by our Checkout.
/// \param screenName Screenname Melidata catalog.
///
/// \param extraParams Extra data.
///
- (void)trackScreenWithScreenName:(NSString * _Nonnull)screenName extraParams:(NSDictionary<NSString *, id> * _Nullable)extraParams;
/// This method is called when a new event is ocurred to the user and tracked by our Checkout.
/// \param screenName Event name.
///
/// \param action action.
///
/// \param result result.
///
/// \param extraParams Extra data.
///
- (void)trackEventWithScreenName:(NSString * _Nullable)screenName action:(NSString * _Null_unspecified)action result:(NSString * _Nullable)result extraParams:(NSDictionary<NSString *, id> * _Nullable)extraParams;
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK23PXTrackingConfiguration")
@interface PXTrackingConfiguration : NSObject
- (nonnull instancetype)initWithTrackListener:(id <PXTrackerListener> _Nullable)trackListener flowName:(NSString * _Nullable)flowName flowDetails:(NSDictionary<NSString *, id> * _Nullable)flowDetails sessionId:(NSString * _Nullable)sessionId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXTransactionDetails")
@interface PXTransactionDetails : NSObject
@property (nonatomic, copy) NSString * _Nullable externalResourceUrl;
@property (nonatomic, copy) NSString * _Nullable financialInstitution;
@property (nonatomic, copy) NSString * _Nullable paymentMethodReferenceId;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXTransactionDetails * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK26PXVendorSpecificAttributes")
@interface PXVendorSpecificAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end









@interface UINavigationController (SWIFT_EXTENSION(MercadoPagoSDK))
@property (nonatomic, readonly) BOOL shouldAutorotate;
@end






#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7 effective-4.2 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
#ifndef MERCADOPAGOSDK_SWIFT_H
#define MERCADOPAGOSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import MLBusinessComponents;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="MercadoPagoSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@protocol AddCardFlowProtocol;
@class NSString;
@class UINavigationController;
@protocol PXTheme;

SWIFT_CLASS("_TtC14MercadoPagoSDK11AddCardFlow")
@interface AddCardFlow : NSObject
@property (nonatomic, weak) id <AddCardFlowProtocol> _Nullable delegate;
- (nonnull instancetype)initWithAccessToken:(NSString * _Nonnull)accessToken locale:(NSString * _Nonnull)locale navigationController:(UINavigationController * _Nonnull)navigationController shouldSkipCongrats:(BOOL)shouldSkipCongrats;
- (nonnull instancetype)initWithAccessToken:(NSString * _Nonnull)accessToken locale:(NSString * _Nonnull)locale navigationController:(UINavigationController * _Nonnull)navigationController OBJC_DESIGNATED_INITIALIZER;
- (void)setSiteId:(NSString * _Nonnull)siteId;
/// Set product id
- (void)setProductId:(NSString * _Nonnull)productId;
- (void)start;
- (void)setThemeWithTheme:(id <PXTheme> _Nonnull)theme;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19AddCardFlowProtocol_")
@protocol AddCardFlowProtocol
- (void)addCardFlowSuccededWithResult:(NSDictionary<NSString *, id> * _Nonnull)result;
- (void)addCardFlowFailedWithShouldRestart:(BOOL)shouldRestart;
@end




/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10ErrorTypes")
@interface ErrorTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol FSPagerViewDataSource;
@protocol FSPagerViewDelegate;
enum ScrollDirection : NSInteger;
@class FSPagerViewTransformer;
@class UIPanGestureRecognizer;
@class NSCoder;
@class UIWindow;
@class UICollectionView;
@class NSIndexPath;
@class UICollectionViewCell;
@class UIScrollView;
@class UINib;
@class FSPagerViewCell;

IB_DESIGNABLE
SWIFT_CLASS("_TtC14MercadoPagoSDK11FSPagerView")
@interface FSPagerView : UIView <UICollectionViewDataSource, UICollectionViewDelegate>
/// The object that acts as the data source of the pager view.
@property (nonatomic, weak) IBOutlet id <FSPagerViewDataSource> _Nullable dataSource;
/// The object that acts as the delegate of the pager view.
@property (nonatomic, weak) IBOutlet id <FSPagerViewDelegate> _Nullable delegate;
/// The scroll direction of the pager view. Default is horizontal.
@property (nonatomic) enum ScrollDirection scrollDirection;
/// The time interval of automatic sliding. 0 means disabling automatic sliding. Default is 0.
@property (nonatomic) IBInspectable CGFloat automaticSlidingInterval;
/// The spacing to use between items in the pager view. Default is 0.
@property (nonatomic) IBInspectable CGFloat interitemSpacing;
/// The item size of the pager view. When the value of this property is FSPagerView.automaticSize, the items fill the entire visible area of the pager view. Default is FSPagerView.automaticSize.
@property (nonatomic) IBInspectable CGSize itemSize;
/// A Boolean value indicates that whether the pager view has infinite items. Default is false.
@property (nonatomic) IBInspectable BOOL isInfinite;
/// An unsigned integer value that determines the deceleration distance of the pager view, which indicates the number of passing items during the deceleration. When the value of this property is FSPagerView.automaticDistance, the actual ‘distance’ is automatically calculated according to the scrolling speed of the pager view. Default is 1.
@property (nonatomic) IBInspectable NSUInteger decelerationDistance;
/// A Boolean value that determines whether scrolling is enabled.
@property (nonatomic) IBInspectable BOOL isScrollEnabled;
/// A Boolean value that controls whether the pager view bounces past the edge of content and back again.
@property (nonatomic) IBInspectable BOOL bounces;
/// A Boolean value that determines whether bouncing always occurs when horizontal scrolling reaches the end of the content view.
@property (nonatomic) IBInspectable BOOL alwaysBounceHorizontal;
/// A Boolean value that determines whether bouncing always occurs when vertical scrolling reaches the end of the content view.
@property (nonatomic) IBInspectable BOOL alwaysBounceVertical;
/// A Boolean value that controls whether the infinite loop is removed if there is only one item. Default is false.
@property (nonatomic) IBInspectable BOOL removesInfiniteLoopForSingleItem;
/// The background view of the pager view.
@property (nonatomic, strong) IBInspectable UIView * _Nullable backgroundView;
/// The transformer of the pager view.
@property (nonatomic, strong) FSPagerViewTransformer * _Nullable transformer;
/// Returns whether the user has touched the content to initiate scrolling.
@property (nonatomic, readonly) BOOL isTracking;
/// The percentage of x position at which the origin of the content view is offset from the origin of the pagerView view.
@property (nonatomic, readonly) CGFloat scrollOffset;
/// The underlying gesture recognizer for pan gestures.
@property (nonatomic, readonly, strong) UIPanGestureRecognizer * _Nonnull panGestureRecognizer;
@property (nonatomic, readonly) NSInteger currentIndex;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)willMoveToWindow:(UIWindow * _Nullable)newWindow;
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView * _Nonnull)collectionView SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)collectionView:(UICollectionView * _Nonnull)collectionView numberOfItemsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UICollectionViewCell * _Nonnull)collectionView:(UICollectionView * _Nonnull)collectionView cellForItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didHighlightItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (BOOL)collectionView:(UICollectionView * _Nonnull)collectionView shouldSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didSelectItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView willDisplayCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)collectionView:(UICollectionView * _Nonnull)collectionView didEndDisplayingCell:(UICollectionViewCell * _Nonnull)cell forItemAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
- (void)scrollViewDidEndDecelerating:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView * _Nonnull)scrollView;
/// Register a class for use in creating new pager view cells.
/// \param cellClass The class of a cell that you want to use in the pager view.
///
/// \param identifier The reuse identifier to associate with the specified class. This parameter must not be nil and must not be an empty string.
///
- (void)registerClass:(Class _Nullable)cellClass forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
/// Register a nib file for use in creating new pager view cells.
/// \param nib The nib object containing the cell object. The nib file must contain only one top-level object and that object must be of the type FSPagerViewCell.
///
/// \param identifier The reuse identifier to associate with the specified nib file. This parameter must not be nil and must not be an empty string.
///
- (void)registerNib:(UINib * _Nullable)nib forCellWithReuseIdentifier:(NSString * _Nonnull)identifier;
/// Returns a reusable cell object located by its identifier
/// \param identifier The reuse identifier for the specified cell. This parameter must not be nil.
///
/// \param index The index specifying the location of the cell.
///
///
/// returns:
/// A valid FSPagerViewCell object.
- (FSPagerViewCell * _Nonnull)dequeueReusableCellWithReuseIdentifier:(NSString * _Nonnull)identifier atIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Reloads all of the data for the collection view.
- (void)reloadData;
/// Selects the item at the specified index and optionally scrolls it into view.
/// \param index The index path of the item to select.
///
/// \param animated Specify true to animate the change in the selection or false to make the change without animating it.
///
- (void)selectItemAtIndex:(NSInteger)index animated:(BOOL)animated;
/// Deselects the item at the specified index.
/// \param index The index of the item to deselect.
///
/// \param animated Specify true to animate the change in the selection or false to make the change without animating it.
///
- (void)deselectItemAtIndex:(NSInteger)index animated:(BOOL)animated;
/// Scrolls the pager view contents until the specified item is visible.
/// \param index The index of the item to scroll into view.
///
/// \param animated Specify true to animate the scrolling behavior or false to adjust the pager view’s visible content immediately.
///
- (void)scrollToItemAtIndex:(NSInteger)index animated:(BOOL)animated;
/// Returns the index of the specified cell.
/// \param cell The cell object whose index you want.
///
///
/// returns:
/// The index of the cell or NSNotFound if the specified cell is not in the pager view.
- (NSInteger)indexForCell:(FSPagerViewCell * _Nonnull)cell SWIFT_WARN_UNUSED_RESULT;
/// Returns the visible cell at the specified index.
/// \param index The index that specifies the position of the cell.
///
///
/// returns:
/// The cell object at the corresponding position or nil if the cell is not visible or index is out of range.
- (FSPagerViewCell * _Nullable)cellForItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end


@interface FSPagerView (SWIFT_EXTENSION(MercadoPagoSDK))
@end

/// Constants indicating the direction of scrolling for the pager view.
typedef SWIFT_ENUM(NSInteger, ScrollDirection, closed) {
/// The pager view scrolls content horizontally
  ScrollDirectionHorizontal = 0,
/// The pager view scrolls content vertically
  ScrollDirectionVertical = 1,
};

@class UILabel;
@class UIImageView;

SWIFT_CLASS("_TtC14MercadoPagoSDK15FSPagerViewCell")
@interface FSPagerViewCell : UICollectionViewCell
/// Returns the label used for the main textual content of the pager view cell.
@property (nonatomic, readonly, strong) UILabel * _Nullable textLabel;
/// Returns the image view of the pager view cell. Default is nil.
@property (nonatomic, readonly, strong) UIImageView * _Nullable imageView;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
@property (nonatomic, getter=isSelected) BOOL selected;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK21FSPagerViewDataSource_")
@protocol FSPagerViewDataSource <NSObject>
/// Asks your data source object for the number of items in the pager view.
- (NSInteger)numberOfItemsInPagerView:(FSPagerView * _Nonnull)pagerView SWIFT_WARN_UNUSED_RESULT;
/// Asks your data source object for the cell that corresponds to the specified item in the pager view.
- (FSPagerViewCell * _Nonnull)pagerView:(FSPagerView * _Nonnull)pagerView cellForItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19FSPagerViewDelegate_")
@protocol FSPagerViewDelegate <NSObject>
@optional
/// Asks the delegate if the item should be highlighted during tracking.
- (BOOL)pagerView:(FSPagerView * _Nonnull)pagerView shouldHighlightItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Tells the delegate that the item at the specified index was highlighted.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView didHighlightItemAtIndex:(NSInteger)index;
/// Asks the delegate if the specified item should be selected.
- (BOOL)pagerView:(FSPagerView * _Nonnull)pagerView shouldSelectItemAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
/// Tells the delegate that the item at the specified index was selected.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView didSelectItemAtIndex:(NSInteger)index;
/// Tells the delegate that the specified cell is about to be displayed in the pager view.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView willDisplayCell:(FSPagerViewCell * _Nonnull)cell forItemAtIndex:(NSInteger)index;
/// Tells the delegate that the specified cell was removed from the pager view.
- (void)pagerView:(FSPagerView * _Nonnull)pagerView didEndDisplayingCell:(FSPagerViewCell * _Nonnull)cell forItemAtIndex:(NSInteger)index;
/// Tells the delegate when the pager view is about to start scrolling the content.
- (void)pagerViewWillBeginDragging:(FSPagerView * _Nonnull)pagerView;
/// Tells the delegate when the user finishes scrolling the content.
- (void)pagerViewWillEndDragging:(FSPagerView * _Nonnull)pagerView targetIndex:(NSInteger)targetIndex;
/// Tells the delegate when the user scrolls the content view within the receiver.
- (void)pagerViewDidScroll:(FSPagerView * _Nonnull)pagerView;
/// Tells the delegate when a scrolling animation in the pager view concludes.
- (void)pagerViewDidEndScrollAnimation:(FSPagerView * _Nonnull)pagerView;
/// Tells the delegate that the pager view has ended decelerating the scrolling movement.
- (void)pagerViewDidEndDecelerating:(FSPagerView * _Nonnull)pagerView;
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK27FSPagerViewLayoutAttributes")
@interface FSPagerViewLayoutAttributes : UICollectionViewLayoutAttributes
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum FSPagerViewTransformerType : NSInteger;

SWIFT_CLASS("_TtC14MercadoPagoSDK22FSPagerViewTransformer")
@interface FSPagerViewTransformer : NSObject
- (nonnull instancetype)initWithType:(enum FSPagerViewTransformerType)type OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, FSPagerViewTransformerType, closed) {
  FSPagerViewTransformerTypeCrossFading = 0,
  FSPagerViewTransformerTypeZoomOut = 1,
  FSPagerViewTransformerTypeDepth = 2,
  FSPagerViewTransformerTypeOverlap = 3,
  FSPagerViewTransformerTypeLinear = 4,
  FSPagerViewTransformerTypeCoverFlow = 5,
  FSPagerViewTransformerTypeFerrisWheel = 6,
  FSPagerViewTransformerTypeInvertedFerrisWheel = 7,
  FSPagerViewTransformerTypeCubic = 8,
};


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK18IdentificationType")
@interface IdentificationType : NSObject
@property (nonatomic, copy) NSString * _Nullable identificationTypeId;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic) NSInteger minLength;
@property (nonatomic) NSInteger maxLength;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class MercadoPagoCheckoutBuilder;

/// Main class of this project.
/// It provides access to most of the checkout experience. It takes a <code>MercadoPagoCheckoutBuilder</code> object.
SWIFT_CLASS("_TtC14MercadoPagoSDK19MercadoPagoCheckout")
@interface MercadoPagoCheckout : NSObject
/// Mandatory init. Based on <code>MercadoPagoCheckoutBuilder</code>
/// \param builder MercadoPagoCheckoutBuilder object.
///
- (nonnull instancetype)initWithBuilder:(MercadoPagoCheckoutBuilder * _Nonnull)builder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end






@protocol PXLifeCycleProtocol;
@protocol PXLazyInitProtocol;

@interface MercadoPagoCheckout (SWIFT_EXTENSION(MercadoPagoSDK))
/// Start checkout experience. This method push our ViewController in your navigation stack.
/// \param navigationController Instance of your <code>UINavigationController</code>.
///
/// \param lifeCycleProtocol Instance of <code>PXLifeCycleProtocol</code> implementation. Provide this protocol in order to get notifications related to our checkout lifecycle. (<code>FinishCheckout</code> and <code>CancelCheckout</code>)
///
- (void)startWithNavigationController:(UINavigationController * _Nonnull)navigationController lifeCycleProtocol:(id <PXLifeCycleProtocol> _Nullable)lifeCycleProtocol;
/// Start checkout init services in lazy mode (without UI). Start our init methods and provide a protocol to notify when the checkout is ready to launch <code>PXLazyInitProtocol</code>
/// \param lazyInitProtocol Implementation of <code>PXLazyInitProtocol</code>.
///
- (void)startWithLazyInitProtocol:(id <PXLazyInitProtocol> _Nonnull)lazyInitProtocol;
@end











@class PXPaymentConfiguration;
@class PXCheckoutPreference;

/// Checkout builder allows you to create a <code>MercadoPagoCheckout</code>. You’ll need a publicKey from MercadoPago Developers Site.
SWIFT_CLASS("_TtC14MercadoPagoSDK26MercadoPagoCheckoutBuilder")
@interface MercadoPagoCheckoutBuilder : NSObject
/// Mandatory init.
/// \param publicKey Merchant public key / collector public key
///
/// \param preferenceId The preference id that represents the payment information.
///
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey preferenceId:(NSString * _Nonnull)preferenceId OBJC_DESIGNATED_INITIALIZER;
/// Mandatory init.
/// \param publicKey Merchant public key / collector public key.
///
/// \param preferenceId The preference id that represents the payment information.
///
/// \param paymentConfiguration The payment configuration object for this checkout.
///
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey preferenceId:(NSString * _Nonnull)preferenceId paymentConfiguration:(PXPaymentConfiguration * _Nonnull)paymentConfiguration;
/// Mandatory init.
/// \param publicKey Merchant public key / collector public key.
///
/// \param checkoutPreference The preference that represents the payment information.
///
/// \param paymentConfiguration The payment configuration for this checkout.
///
- (nonnull instancetype)initWithPublicKey:(NSString * _Nonnull)publicKey checkoutPreference:(PXCheckoutPreference * _Nonnull)checkoutPreference paymentConfiguration:(PXPaymentConfiguration * _Nonnull)paymentConfiguration OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class PXAdvancedConfiguration;
@class PXTrackingConfiguration;
@class UIColor;
enum PXCustomTranslationKey : NSInteger;

@interface MercadoPagoCheckoutBuilder (SWIFT_EXTENSION(MercadoPagoSDK))
/// Private key provides save card capabilities and account money balance. (User logged)
/// \param privateKey The user private key
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setPrivateKeyWithKey:(NSString * _Nonnull)key;
/// It provides support for custom checkout functionality/configure special behaviour
/// You can enable/disable several functionality.
/// \param config <code>PXAdvancedConfiguration</code> object.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setAdvancedConfigurationWithConfig:(PXAdvancedConfiguration * _Nonnull)config;
/// It provides support for tracking related functionalities.
/// \param config <code>PXTrackingConfiguration</code> object.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setTrackingConfigurationWithConfig:(PXTrackingConfiguration * _Nonnull)config;
/// You can set one color (your primary color) and we will take care of the rest. Delivering the best Checkout experience based on your color. If you need more customization explore <code>PXTheme</code> inside <code>PXAdvancedConfiguration</code>.
/// \param checkoutColor Your primary color.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setColorWithCheckoutColor:(UIColor * _Nonnull)checkoutColor;
/// You can set the Language locale string. (<code>es</code> is the default value). For more values explore our <code>PXLanguages</code> public enum.
/// \param _string Your locale string Language.
///
- (MercadoPagoCheckoutBuilder * _Nonnull)setLanguage:(NSString * _Nonnull)string;
/// :nodoc:
- (MercadoPagoCheckoutBuilder * _Nonnull)addCustomTranslation:(enum PXCustomTranslationKey)key withTranslation:(NSString * _Nonnull)translation;
@end






/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK17PXAccountMoneyDto")
@interface PXAccountMoneyDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// This object is for custom actions. It takes a label and a closure. Closures in Swift are similar to blocks in Objective-C. We need this object in certains scenarios, like in <code>PXBusinessResult</code> custom button actions.
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXAction")
@interface PXAction : NSObject
/// Mandatory init.
/// \param label The label for your custom action.
///
/// \param action Clousure custom block.
///
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label action:(void (^ _Nonnull)(void))action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXAddress")
@interface PXAddress : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class PXReviewConfirmConfiguration;
@class PXPaymentResultConfiguration;
@protocol PXReviewConfirmDynamicViewsConfiguration;
@protocol PXDynamicViewControllerProtocol;
@class PXDiscountParamsConfiguration;

/// Advanced configuration provides you support for custom checkout functionality/configure special behaviour when checkout is running.
SWIFT_CLASS("_TtC14MercadoPagoSDK23PXAdvancedConfiguration")
@interface PXAdvancedConfiguration : NSObject
/// Advanced UI color customization. Use this config to create your custom UI colors based on PXTheme protocol. Also you can use this protocol to customize your fonts.
@property (nonatomic, strong) id <PXTheme> _Nullable theme;
/// Add the possibility to configure ESC behaviour.
/// If set as true, then saved cards will try to use ESC feature.
/// If set as false, then security code will be always asked.
@property (nonatomic) BOOL escEnabled SWIFT_DEPRECATED;
/// Add the possibility to enabled/disabled express checkout.
@property (nonatomic) BOOL expressEnabled;
/// Instores usage / money in usage. - Use case: Not all bank deals apply right now to all preferences.
@property (nonatomic) BOOL bankDealsEnabled;
/// Loyalty usage. - Use case: Show/hide bottom amount row.
@property (nonatomic) BOOL amountRowEnabled;
/// Enable to preset configurations to customize visualization on the ‘Review and Confirm screen’
@property (nonatomic, strong) PXReviewConfirmConfiguration * _Nonnull reviewConfirmConfiguration;
/// Enable to preset configurations to customize visualization on the ‘Congrats’ screen / ‘PaymentResult’ screen.
@property (nonatomic, strong) PXPaymentResultConfiguration * _Nonnull paymentResultConfiguration;
/// Add dynamic custom views on ‘Review and Confirm screen’.
@property (nonatomic, strong) id <PXReviewConfirmDynamicViewsConfiguration> _Nullable reviewConfirmDynamicViewsConfiguration;
/// Add dynamic view controllers to flow.
@property (nonatomic, copy) NSArray<id <PXDynamicViewControllerProtocol>> * _Nonnull dynamicViewControllersConfiguration;
/// Set additional data to get discounts
@property (nonatomic, strong) PXDiscountParamsConfiguration * _Nullable discountParamsConfiguration;
/// Set product id
- (void)setProductIdWithId:(NSString * _Nonnull)id;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK21PXAmountConfiguration")
@interface PXAmountConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXAmountInfo")
@interface PXAmountInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK14PXApiException")
@interface PXApiException : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXBankDeal")
@interface PXBankDeal : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK8PXResult_")
@protocol PXResult <NSObject>
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK13PXBasePayment_")
@protocol PXBasePayment <PXResult>
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK5PXBin")
@interface PXBin : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Whe use this object to store properties related to Biometric module.
/// Check PXBiometricProtocol methods.
SWIFT_CLASS("_TtC14MercadoPagoSDK17PXBiometricConfig")
@interface PXBiometricConfig : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull flowIdentifier;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull params;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// Use this protocol to implement Biometric validation
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19PXBiometricProtocol_")
@protocol PXBiometricProtocol <NSObject>
- (void)validateWithConfig:(PXBiometricConfig * _Nonnull)config onSuccess:(void (^ _Nonnull)(void))onSuccess onError:(void (^ _Nonnull)(NSError * _Nonnull))onError;
- (BOOL)isValidationRequiredWithConfig:(PXBiometricConfig * _Nonnull)config SWIFT_WARN_UNUSED_RESULT;
@end

enum PXBusinessResultStatus : NSInteger;
@class UIImage;

/// This class represents a business payment result.
/// For example, when there is an error when making a payment that has to do with the business and not with the payment method.
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXBusinessResult")
@interface PXBusinessResult : NSObject <PXBasePayment>
/// Creates a <code>PXBusinessResult</code> which represents Business Payment Result.
/// \param receiptId Reference id for payment receipt.
///
/// \param status Business Status Result
///
/// \param title Title that will be displayed on the result screen
///
/// \param subtitle Sub-title that will be displayed on the result screen
///
/// \param icon Icon that will be displayed on the result screen
///
/// \param mainAction Action for the main action button that will be displayed on the result screen
///
/// \param secondaryAction Action for the secondary action button that will be displayed on the result screen
///
/// \param helpMessage Help message that will be displayed on the result screen
///
/// \param showPaymentMethod True if you want to show the cell of payment method in the result screen
///
/// \param statementDescription Statement description that will be displayed on the result screen
///
/// \param imageUrl Image url for the icon that will be displayed on the result screen
///
/// \param topCustomView Custom view that will be displayed on the result screen on top
///
/// \param bottomCustomView Custom view that will be displayed on the result screen on bottom
///
/// \param paymentStatus Payment status of the payment result
///
/// \param paymentStatusDetail Payment status detail of the payment result
///
- (nonnull instancetype)initWithReceiptId:(NSString * _Nullable)receiptId status:(enum PXBusinessResultStatus)status title:(NSString * _Nonnull)title subtitle:(NSString * _Nullable)subtitle icon:(UIImage * _Nullable)icon mainAction:(PXAction * _Nullable)mainAction secondaryAction:(PXAction * _Nullable)secondaryAction helpMessage:(NSString * _Nullable)helpMessage showPaymentMethod:(BOOL)showPaymentMethod statementDescription:(NSString * _Nullable)statementDescription imageUrl:(NSString * _Nullable)imageUrl topCustomView:(UIView * _Nullable)topCustomView bottomCustomView:(UIView * _Nullable)bottomCustomView paymentStatus:(NSString * _Nonnull)paymentStatus paymentStatusDetail:(NSString * _Nonnull)paymentStatusDetail OBJC_DESIGNATED_INITIALIZER;
/// Creates a <code>PXBusinessResult</code> which represents Business Payment Result.
/// \param receiptId Reference id for payment receipt.
///
/// \param status Business Status Result
///
/// \param title Title that will be displayed on the result screen
///
/// \param subtitle Sub-title that will be displayed on the result screen
///
/// \param icon Icon that will be displayed on the result screen
///
/// \param mainAction Action for the main action button that will be displayed on the result screen
///
/// \param secondaryAction Action for the secondary action button that will be displayed on the result screen
///
/// \param helpMessage Help message that will be displayed on the result screen
///
/// \param showPaymentMethod True if you want to show the cell of payment method in the result screen
///
/// \param statementDescription Statement description that will be displayed on the result screen
///
/// \param imageUrl Image url for the icon that will be displayed on the result screen
///
/// \param topCustomView Custom view that will be displayed on the result screen at top of Payment Method
///
/// \param bottomCustomView Custom view that will be displayed on the result screen at bottom of Payment Method
///
/// \param paymentStatus Payment status of the payment result
///
/// \param paymentStatusDetail Payment status detail of the payment result
///
/// \param paymentMethodId Payment method id
///
/// \param paymentTypeId Payment type id
///
/// \param importantView Custom view that will be displayed above crossSeling backend drive box. (Below congrats header)
///
- (nonnull instancetype)initWithReceiptId:(NSString * _Nullable)receiptId status:(enum PXBusinessResultStatus)status title:(NSString * _Nonnull)title subtitle:(NSString * _Nullable)subtitle icon:(UIImage * _Nullable)icon mainAction:(PXAction * _Nullable)mainAction secondaryAction:(PXAction * _Nullable)secondaryAction helpMessage:(NSString * _Nullable)helpMessage showPaymentMethod:(BOOL)showPaymentMethod statementDescription:(NSString * _Nullable)statementDescription imageUrl:(NSString * _Nullable)imageUrl topCustomView:(UIView * _Nullable)topCustomView bottomCustomView:(UIView * _Nullable)bottomCustomView paymentStatus:(NSString * _Nonnull)paymentStatus paymentStatusDetail:(NSString * _Nonnull)paymentStatusDetail paymentMethodId:(NSString * _Nonnull)paymentMethodId paymentTypeId:(NSString * _Nonnull)paymentTypeId importantView:(UIView * _Nullable)importantView OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXBusinessResult (SWIFT_EXTENSION(MercadoPagoSDK))
- (PXBusinessResult * _Nonnull)setReceiptIdList:(NSArray<NSString *> * _Nonnull)receiptList;
- (PXBusinessResult * _Nonnull)shouldShowReceipt:(BOOL)shouldShow;
@end



@interface PXBusinessResult (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
@end


/// Possible Business Result Status:
/// <ul>
///   <li>
///     APPROVED
///   </li>
///   <li>
///     REJECTED
///   </li>
///   <li>
///     PENDING
///   </li>
///   <li>
///     IN_PROGRESS
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, PXBusinessResultStatus, closed) {
/// APPROVED payment.
  PXBusinessResultStatusAPPROVED = 0,
/// REJECTED payment.
  PXBusinessResultStatusREJECTED = 1,
/// PENDING payment.
  PXBusinessResultStatusPENDING = 2,
/// IN_PROGRESS payment.
  PXBusinessResultStatusIN_PROGRESS = 3,
};

@class NSDate;

/// Model that represents a discount campaign.
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXCampaign")
@interface PXCampaign : NSObject
/// Mandatory init.
/// \param id Campaign id.
///
/// \param code Campaign code.
///
/// \param maxRedeemPerUser Campaign max redeem per user.
///
/// \param name Campaign name.
///
/// \param maxCouponAmount Campaign max coupon amount.
///
/// \param endDate Campaign end date.
///
- (nonnull instancetype)initWithId:(int64_t)id code:(NSString * _Nullable)code maxRedeemPerUser:(NSInteger)maxRedeemPerUser name:(NSString * _Nullable)name maxCouponAmount:(double)maxCouponAmount endDate:(NSDate * _Nonnull)endDate OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (nonnull instancetype)initWithId:(int64_t)id code:(NSString * _Nullable)code name:(NSString * _Nullable)name maxCouponAmount:(double)maxCouponAmount OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXCampaign (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (int64_t)getId SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK6PXCard")
@interface PXCard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXCardDisplayInfoDto")
@interface PXCardDisplayInfoDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXCardHolder")
@interface PXCardHolder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXCardNumber")
@interface PXCardNumber : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXCardToken")
@interface PXCardToken : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXCause")
@interface PXCause : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class PXItem;
@class PXPayer;
@class PXPaymentPreference;
@class PXSite;
@class PXDifferentialPricing;
@class NSData;

/// Model that represents <code>curl -X OPTIONS</code> (https://api.mercadopago.com/checkout/preferences) <code>| json_pp</code>
/// It can be not exactly the same because exists custom configurations for open Preference.
/// Some values like: binary mode are not present on API call.
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXCheckoutPreference")
@interface PXCheckoutPreference : NSObject
/// id
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// items
@property (nonatomic, copy) NSArray<PXItem *> * _Nonnull items;
/// payer
@property (nonatomic, strong) PXPayer * _Null_unspecified payer;
/// paymentPreference
@property (nonatomic, strong) PXPaymentPreference * _Nonnull paymentPreference;
/// siteId
@property (nonatomic, copy) NSString * _Nonnull siteId;
/// expirationDateTo
@property (nonatomic, copy) NSDate * _Nullable expirationDateTo;
/// expirationDateFrom
@property (nonatomic, copy) NSDate * _Nullable expirationDateFrom;
/// site
@property (nonatomic, strong) PXSite * _Nullable site;
/// differentialPricing
@property (nonatomic, strong) PXDifferentialPricing * _Nullable differentialPricing;
/// marketplace
@property (nonatomic, copy) NSString * _Nullable marketplace;
/// branch id
@property (nonatomic, copy) NSString * _Nullable branchId;
/// processing mode
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull processingModes;
/// Additional info - json string.
@property (nonatomic, copy) NSString * _Nullable additionalInfo;
/// Collector ID
@property (nonatomic, copy) NSString * _Nullable collectorId;
/// Mandatory init.
/// \param preferenceId The preference id that represents the payment information.
///
- (nonnull instancetype)initWithPreferenceId:(NSString * _Nonnull)preferenceId OBJC_DESIGNATED_INITIALIZER;
/// Mandatory init.
/// Builder for custom CheckoutPreference construction.
/// It should be only used if you are processing the payment
/// with a Payment processor. Otherwise you should use the ID constructor.
/// \param siteId Preference site.
///
/// \param payerEmail Payer email.
///
/// \param items Items to pay.
///
- (nonnull instancetype)initWithSiteId:(NSString * _Nonnull)siteId payerEmail:(NSString * _Nonnull)payerEmail items:(NSArray<PXItem *> * _Nonnull)items OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (PXCheckoutPreference * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end




@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// Determinate if binaryMode feature is enabled/disabled.
- (BOOL)isBinaryMode SWIFT_WARN_UNUSED_RESULT;
/// Default value is <code>FALSE</code>.
/// <code>TRUE</code> value processed payment can only be APPROVED or REJECTED.
/// Non compatible with PaymentProcessor or off payments methods.
/// \param isBinaryMode Binary mode Bool value.
///
- (PXCheckoutPreference * _Nonnull)setBinaryModeWithIsBinaryMode:(BOOL)isBinaryMode;
@end


@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
- (void)setPayerWithPayer:(PXPayer * _Nonnull)payer;
@end




@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// \param processingModes Supported proccesing modes by the preference. On a first instance this field can support aggregator and gateway modes. If this setter is not used aggregator only support will be infered.
///
- (void)setGatewayProcessingModes:(NSArray<NSString *> * _Nonnull)processingModes;
/// \param branchId This field can be used optionally to customize the gateway mode experience.
///
- (void)setGatewayBranchId:(NSString * _Nonnull)branchId;
/// getProcessingModes
- (NSArray<NSString *> * _Nonnull)getProcessingModes SWIFT_WARN_UNUSED_RESULT;
/// getBranchId
- (NSString * _Nullable)getBranchId SWIFT_WARN_UNUSED_RESULT;
@end



@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// Date that indicates when this preference expires.
/// If the preference is expired, then the checkout will show an error.
/// \param expirationDate Date expiration.
///
- (void)setExpirationDate:(NSDate * _Nonnull)expirationDate;
/// Date that indicates when this preference start.
/// \param date Date active.
///
- (void)setActiveFromDate:(NSDate * _Nonnull)date;
/// Differential pricing configuration for this preference.
/// This object is related with the way the installments are asked.
/// \param differentialPricing <code>PXDifferentialPricing</code> pricing object.
///
- (void)setDifferentialPricingWithDifferentialPricing:(PXDifferentialPricing * _Nonnull)differentialPricing;
/// Add exclusion payment method id. If you exclude it, it’s not going appear as a payment method available on checkout.
/// \param paymentMethodId paymentMethodId exclusion id.
///
- (void)addExcludedPaymentMethod:(NSString * _Nonnull)paymentMethodId;
/// Add exclusion list by payment method id. If you exclude it, it’s not going appear as a payment method available on checkout.
/// \param paymentMethodIds paymentMethodId exclusion id.
///
- (void)setExcludedPaymentMethods:(NSArray<NSString *> * _Nonnull)paymentMethodIds;
/// Add exclusion by payment type
/// If you exclude it, it’s not going appear as a payment method available on checkout
/// \param paymentTypeId paymentTypeId exclusion type
///
- (void)addExcludedPaymentType:(NSString * _Nonnull)paymentTypeId;
/// Add exclusion list by payment type
/// If you exclude it, it’s not going appear as a payment method available on checkout
/// \param paymentTypeIds paymentTypeIds exclusion list.
///
- (void)setExcludedPaymentTypes:(NSArray<NSString *> * _Nonnull)paymentTypeIds;
/// This value limits the amount of installments to be shown by the user.
/// \param maxInstallments max installments to be shown
///
- (void)setMaxInstallments:(NSInteger)maxInstallments;
/// When default installments is not null
/// then this value will be forced as installment selected if it matches
/// with one provided by the Installments service.
/// \param defaultInstallments number of the value to be forced
///
- (void)setDefaultInstallments:(NSInteger)defaultInstallments;
/// Default paymetMethodId selection.
/// WARNING: This is an internal method not intended for public use.
/// It is not considered part of the public API.
/// \param paymetMethodId Payment method ID to make default.
///
- (void)setDefaultPaymentMethodId:(NSString * _Nonnull)paymetMethodId;
/// Default cardId selection.
/// WARNING: This is an internal method not intended for public use.
/// It is not considered part of the public API. Only to support Moneyin feature.
/// \param paymetMethodId cardId to autoselection Moneyin feature.
///
- (void)setCardIdWithCardId:(NSString * _Nonnull)cardId;
@end


@interface PXCheckoutPreference (SWIFT_EXTENSION(MercadoPagoSDK))
/// getId
- (NSString * _Nonnull)getId SWIFT_WARN_UNUSED_RESULT;
/// getItems
- (NSArray<PXItem *> * _Nullable)getItems SWIFT_WARN_UNUSED_RESULT;
/// getSiteId
- (NSString * _Nonnull)getSiteId SWIFT_WARN_UNUSED_RESULT;
/// getExpirationDate
- (NSDate * _Nullable)getExpirationDate SWIFT_WARN_UNUSED_RESULT;
/// getActiveFromDate
- (NSDate * _Nullable)getActiveFromDate SWIFT_WARN_UNUSED_RESULT;
/// getExcludedPaymentTypesIds
- (NSArray<NSString *> * _Nonnull)getExcludedPaymentTypesIds SWIFT_WARN_UNUSED_RESULT;
/// getMaxAcceptedInstallments
- (NSInteger)getMaxAcceptedInstallments SWIFT_WARN_UNUSED_RESULT;
/// getExcludedPaymentMethodsIds
- (NSArray<NSString *> * _Nonnull)getExcludedPaymentMethodsIds SWIFT_WARN_UNUSED_RESULT;
/// getDefaultPaymentMethodId
- (NSString * _Nullable)getDefaultPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
/// getTotalAmount
- (double)getTotalAmount SWIFT_WARN_UNUSED_RESULT;
@end


/// This class to provides information (like <code>PXPaymentData</code> or <code>PXCheckoutPreference</code>) about our Checkout.
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXCheckoutStore")
@interface PXCheckoutStore : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class PXPaymentData;

@interface PXCheckoutStore (SWIFT_EXTENSION(MercadoPagoSDK))
/// Get <code>PXPaymentData</code> object.
- (PXPaymentData * _Nonnull)getPaymentData SWIFT_WARN_UNUSED_RESULT;
/// Get list of <code>PXPaymentData</code> for split payment.
- (NSArray<PXPaymentData *> * _Nonnull)getPaymentDatas SWIFT_WARN_UNUSED_RESULT;
/// Get <code>PXCheckoutPreference</code> object.
- (PXCheckoutPreference * _Nullable)getCheckoutPreference SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXCheckoutStore (SWIFT_EXTENSION(MercadoPagoSDK))
/// Add key-value data.
/// \param forKey Key to save. Type: <code>String</code>
///
/// \param value Value to save. Type: <code>Any</code>
///
- (void)addDataForKey:(NSString * _Nonnull)forKey value:(id _Nonnull)value;
/// Remove data for key.
/// \param key Key to remove.
///
- (void)removeWithKey:(NSString * _Nonnull)key;
/// Clear all key-values.
- (void)removeAll;
/// Get data for key.
/// \param forKey Key to get data.
///
- (id _Nullable)getDataForKey:(NSString * _Nonnull)forKey SWIFT_WARN_UNUSED_RESULT;
@end

@protocol PXFlowBehaviourProtocol;

/// :nodoc
SWIFT_CLASS("_TtC14MercadoPagoSDK21PXConfiguratorManager")
@interface PXConfiguratorManager : NSObject
+ (void)withBiometric:(id <PXBiometricProtocol> _Nonnull)biometricProtocol;
+ (void)withFlowBehaviourProtocol:(id <PXFlowBehaviourProtocol> _Nonnull)flowBehaviourProtocol;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXCurrency")
@interface PXCurrency : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK24PXCustomOptionSearchItem")
@interface PXCustomOptionSearchItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc
typedef SWIFT_ENUM(NSInteger, PXCustomTranslationKey, closed) {
  PXCustomTranslationKeyTotal_to_pay = 0,
  PXCustomTranslationKeyTotal_to_pay_onetap = 1,
  PXCustomTranslationKeyHow_to_pay = 2,
  PXCustomTranslationKeyPay_button = 3,
  PXCustomTranslationKeyPay_button_progress = 4,
};


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXCustomer")
@interface PXCustomer : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXDevice")
@interface PXDevice : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXDeviceId")
@interface PXDeviceId : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK21PXDifferentialPricing")
@interface PXDifferentialPricing : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// Model object that represents the discount which will be applied to a payment.
SWIFT_CLASS("_TtC14MercadoPagoSDK10PXDiscount")
@interface PXDiscount : NSObject
/// Builder for discount construction.
/// This discount have to be created in Mercado Pago.
/// \param id Discount id
///
/// \param name Discount name (Optional)
///
/// \param percentOff Number of percent off.
///
/// \param amountOff Number of amount off.
///
/// \param couponAmount Coupon amount value.
///
/// \param currencyId Currency id string symbol.
///
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id name:(NSString * _Nullable)name percentOff:(double)percentOff amountOff:(double)amountOff couponAmount:(double)couponAmount currencyId:(NSString * _Nullable)currencyId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

@class NSDecimalNumber;

@interface PXDiscount (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSDecimalNumber * _Nullable)getCouponAmount SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXDiscount (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


/// Configuration related to Mercadopago discounts and campaigns. More details: <code>PXDiscount</code> and <code>PXCampaign</code>.
SWIFT_CLASS("_TtC14MercadoPagoSDK23PXDiscountConfiguration")
@interface PXDiscountConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// Set Mercado Pago discount that will be applied to total amount.
/// When you set a discount with its campaign, we do not check in discount service.
/// You have to set a payment processor for discount be applied.
/// \param discount Mercado Pago discount.
///
/// \param campaign Discount campaign with discount data.
///
- (nonnull instancetype)initWithDiscount:(PXDiscount * _Nonnull)discount campaign:(PXCampaign * _Nonnull)campaign OBJC_DESIGNATED_INITIALIZER;
/// When you have the user have wasted all the discounts available
/// this kind of configuration will show a generic message to the user.
+ (PXDiscountConfiguration * _Nonnull)initForNotAvailableDiscount SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS("_TtC14MercadoPagoSDK29PXDiscountParamsConfiguration")
@interface PXDiscountParamsConfiguration : NSObject
/// Set additional data needed to apply a specific discount.
/// \param labels Additional data needed to apply a specific discount.
///
/// \param productId Let us to enable discounts for the product id specified.
///
- (nonnull instancetype)initWithLabels:(NSArray<NSString *> * _Nonnull)labels productId:(NSString * _Nonnull)productId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK17PXDiscountTracker")
@interface PXDiscountTracker : NSObject <MLBusinessDiscountTrackerProtocol>
- (void)trackWithAction:(NSString * _Nonnull)action eventData:(NSDictionary<NSString *, id> * _Nonnull)eventData;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, PXDynamicViewControllerPosition, closed) {
  PXDynamicViewControllerPositionDID_ENTER_REVIEW_AND_CONFIRM = 0,
  PXDynamicViewControllerPositionDID_TAP_ONETAP_HEADER = 1,
};

@class UIViewController;
@class PXPluginNavigationHandler;

SWIFT_PROTOCOL("_TtP14MercadoPagoSDK31PXDynamicViewControllerProtocol_")
@protocol PXDynamicViewControllerProtocol <NSObject>
- (UIViewController * _Nullable)viewControllerWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
- (enum PXDynamicViewControllerPosition)positionWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
@optional
- (void)navigationHandlerWithNavigationHandler:(PXPluginNavigationHandler * _Nonnull)navigationHandler;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXError")
@interface PXError : NSError
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain code:(NSInteger)code userInfo:(NSDictionary<NSString *, id> * _Nullable)dict SWIFT_UNAVAILABLE;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXFeeDetail")
@interface PXFeeDetail : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXFinancialInstitution")
@interface PXFinancialInstitution : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXFingerprint")
@interface PXFingerprint : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum PXResultKey : NSInteger;

SWIFT_PROTOCOL("_TtP14MercadoPagoSDK23PXFlowBehaviourProtocol_")
@protocol PXFlowBehaviourProtocol <NSObject>
- (void)trackConversion;
- (void)trackConversionWithResult:(enum PXResultKey)result;
@end

enum RemotePaymentStatus : NSInteger;

/// Use this object to notify your own custom payment using <code>PXPaymentProcessor</code>.
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXGenericPayment")
@interface PXGenericPayment : NSObject <PXBasePayment>
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
/// id related to your payment.
@property (nonatomic, readonly, copy) NSString * _Nullable paymentId;
/// Status of your payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull status;
/// Status detail of your payment.
@property (nonatomic, readonly, copy) NSString * _Nonnull statusDetail;
/// Payment method type id.
@property (nonatomic, readonly, copy) NSString * _Nullable paymentMethodId;
/// Payment method type id.
@property (nonatomic, readonly, copy) NSString * _Nullable paymentMethodTypeId;
/// \param status Status of payment.
///
/// \param statusDetail Status detail of payment.
///
/// \param paymentId Id of payment.
///
- (nonnull instancetype)initWithStatus:(NSString * _Nonnull)status statusDetail:(NSString * _Nonnull)statusDetail paymentId:(NSString * _Nullable)paymentId OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (nonnull instancetype)initWithPaymentStatus:(enum RemotePaymentStatus)paymentStatus statusDetail:(NSString * _Nonnull)statusDetail receiptId:(NSString * _Nullable)receiptId OBJC_DESIGNATED_INITIALIZER;
/// \param status Status of payment.
///
/// \param statusDetail Status detail of payment.
///
/// \param paymentId Id of payment.
///
/// \param paymentMethodId Payment Method id.
///
/// \param paymentMethodTypeId Payment Type Id.
///
- (nonnull instancetype)initWithStatus:(NSString * _Nonnull)status statusDetail:(NSString * _Nonnull)statusDetail paymentId:(NSString * _Nullable)paymentId paymentMethodId:(NSString * _Nullable)paymentMethodId paymentMethodTypeId:(NSString * _Nullable)paymentMethodTypeId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, RemotePaymentStatus, closed) {
  RemotePaymentStatusAPPROVED = 0,
  RemotePaymentStatusREJECTED = 1,
};


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXIdentification")
@interface PXIdentification : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXIdentificationType")
@interface PXIdentificationType : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXInstallment")
@interface PXInstallment : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXInstruction")
@interface PXInstruction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK19PXInstructionAction")
@interface PXInstructionAction : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK24PXInstructionInteraction")
@interface PXInstructionInteraction : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXInstructionReference")
@interface PXInstructionReference : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK14PXInstructions")
@interface PXInstructions : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXIssuer")
@interface PXIssuer : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nullable name;
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id name:(NSString * _Nullable)name OBJC_DESIGNATED_INITIALIZER;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXIssuer * _Nullable)fromJSONToPXIssuerWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PXIssuer *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXIssuer (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
@end



/// Model object representing the Item.
SWIFT_CLASS("_TtC14MercadoPagoSDK6PXItem")
@interface PXItem : NSObject
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable categoryId;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable currencyId;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable _description;
/// :nodoc:
@property (nonatomic, copy) NSString * _Null_unspecified id;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nullable pictureUrl;
/// :nodoc:
@property (nonatomic) NSInteger quantity;
/// :nodoc:
@property (nonatomic, copy) NSString * _Nonnull title;
/// :nodoc:
@property (nonatomic) double unitPrice;
/// Builder for item construction.
/// It should be used when checkout initialize without a preference id and
/// it is initialize with a preference created programmatically.
/// \param title Item title.
///
/// \param quantity Item quantity.
///
/// \param unitPrice Item price.
///
- (nonnull instancetype)initWithTitle:(NSString * _Nonnull)title quantity:(NSInteger)quantity unitPrice:(double)unitPrice OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (PXItem * _Nullable)fromJSONToPXItemWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (NSArray<PXItem *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface PXItem (SWIFT_EXTENSION(MercadoPagoSDK))
/// setId
/// \param id ID.
///
- (void)setIdWithId:(NSString * _Nonnull)id;
/// setDescription
/// \param description Description.
///
- (void)setDescriptionWithDescription:(NSString * _Nonnull)description;
/// setPictureURL
/// \param url Url remote picture.
///
- (void)setPictureURLWithUrl:(NSString * _Nonnull)url;
/// setCategoryId
/// \param categoryId Category id.
///
- (void)setCategoryIdWithCategoryId:(NSString * _Nonnull)categoryId;
@end


@interface PXItem (SWIFT_EXTENSION(MercadoPagoSDK))
/// getQuantity
- (NSInteger)getQuantity SWIFT_WARN_UNUSED_RESULT;
/// getUnitPrice
- (double)getUnitPrice SWIFT_WARN_UNUSED_RESULT;
/// getTitle
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
/// getId
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
/// getDescription
- (NSString * _Nullable)getDescription SWIFT_WARN_UNUSED_RESULT;
/// getCategoryId
- (NSString * _Nullable)getCategoryId SWIFT_WARN_UNUSED_RESULT;
/// getPictureURL
- (NSString * _Nullable)getPictureURL SWIFT_WARN_UNUSED_RESULT;
@end


/// Use <code>PXLazyInitProtocol</code> to start the checkout init services in lazy mode (without UI). Implement this protocol and keep you informed when the checkout is ready to launch.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK18PXLazyInitProtocol_")
@protocol PXLazyInitProtocol <NSObject>
/// Init checkout methods finished. The checkout is ready to start. You receive the <code>MercadoPagoCheckout</code> reference.
/// \param checkout Checkout reference.
///
- (void)didFinishWithCheckout:(MercadoPagoCheckout * _Nonnull)checkout;
/// Init checkout methods fail.
/// \param checkout Checkout reference.
///
- (void)failureWithCheckout:(MercadoPagoCheckout * _Nonnull)checkout;
@end


/// Implement this protocol in order to keep you informed about important actions in our checkout life cycle.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK19PXLifeCycleProtocol_")
@protocol PXLifeCycleProtocol <NSObject>
/// User cancel checkout. By any cancel UI button or back navigation action. You can return an optional block, to override the default exit cancel behavior. Default exit cancel behavior is back navigation stack.
- (void (^ _Nullable)(void))cancelCheckout SWIFT_WARN_UNUSED_RESULT;
/// You can return an optional block, to override the default (pop to root) exit behavior.
/// Your block must have a pxresult as parameter, that represent a payment or business result to be informed.
- (void (^ _Nullable)(id <PXResult> _Nullable))finishCheckout SWIFT_WARN_UNUSED_RESULT;
@optional
/// User tap on our change payment method action. If you return a block,
/// you can override the change payment method action. For example to
/// go to specific viewController, etc. (Only moneyIn use case)
/// warning:
/// This is and internal method. Use it at your own risk.
/// :nodoc:
- (void (^ _Nullable)(void))changePaymentMethodTapped SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK26PXOfflineMethodsCompliance")
@interface PXOfflineMethodsCompliance : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXOneTapCard")
@interface PXOneTapCard : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXOneTapCardDto")
@interface PXOneTapCardDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXOneTapDto")
@interface PXOneTapDto : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK12PXOneTapItem")
@interface PXOneTapItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC14MercadoPagoSDK18PXOneTapNewCardDto")
@interface PXOneTapNewCardDto : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXOrder")
@interface PXOrder : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXPayer")
@interface PXPayer : NSObject <NSCopying>
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable accessToken;
@property (nonatomic, strong) PXIdentification * _Nullable identification;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable entityType;
@property (nonatomic, copy) NSString * _Nonnull email;
@property (nonatomic, copy) NSString * _Nullable firstName;
@property (nonatomic, copy) NSString * _Nullable lastName;
@property (nonatomic, copy) NSString * _Nullable legalName;
- (nonnull instancetype)initWithId:(NSString * _Nullable)id accessToken:(NSString * _Nullable)accessToken identification:(PXIdentification * _Nullable)identification type:(NSString * _Nullable)type entityType:(NSString * _Nullable)entityType email:(NSString * _Nonnull)email firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName legalName:(NSString * _Nullable)legalName OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithEmail:(NSString * _Nonnull)email OBJC_DESIGNATED_INITIALIZER;
/// :nodoc:
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



@interface PXPayer (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXPayer * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXPayer (SWIFT_EXTENSION(MercadoPagoSDK))
- (void)setIdWithPayerId:(NSString * _Nonnull)payerId;
- (void)setIdentificationWithIdentification:(PXIdentification * _Nonnull)identification;
- (void)setEntityTypeWithEntityType:(NSString * _Nonnull)entityType;
- (void)setFirstNameWithName:(NSString * _Nonnull)name;
- (void)setLastNameWithLastName:(NSString * _Nonnull)lastName;
- (void)setLegalNameWithLastName:(NSString * _Nonnull)lastName;
@end


@interface PXPayer (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nonnull)getEmail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
- (PXIdentification * _Nullable)getIdentification SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getEntityType SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getFirstName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLastName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getLegalName SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK17PXPayerCompliance")
@interface PXPayerCompliance : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK11PXPayerCost")
@interface PXPayerCost : NSObject
@property (nonatomic) double installmentRate;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull labels;
@property (nonatomic) double minAllowedAmount;
@property (nonatomic) double maxAllowedAmount;
@property (nonatomic, copy) NSString * _Nullable recommendedMessage;
@property (nonatomic) double installmentAmount;
@property (nonatomic) double totalAmount;
@property (nonatomic) NSInteger installments;
@property (nonatomic, copy) NSString * _Nullable processingMode;
@property (nonatomic, copy) NSString * _Nullable paymentMethodOptionId;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXPayerCost * _Nullable)fromJSONToPXPayerCostWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PXPayerCost *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class PXRefund;
@class PXTransactionDetails;

/// This is our Payment object. When we make the payment, we return this object in the checkout exit. More details in: <code>PXLifeCycleProtocol</code> finishCheckout method.
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXPayment")
@interface PXPayment : NSObject <PXBasePayment>
/// callForAuthorizeId
@property (nonatomic, copy) NSString * _Nullable callForAuthorizeId;
/// card
@property (nonatomic, strong) PXCard * _Nullable card;
/// currencyId
@property (nonatomic, copy) NSString * _Nullable currencyId;
/// dateApproved
@property (nonatomic, copy) NSDate * _Nullable dateApproved;
/// dateCreated
@property (nonatomic, copy) NSDate * _Nullable dateCreated;
/// dateLastUpdated
@property (nonatomic, copy) NSDate * _Nullable dateLastUpdated;
/// description
@property (nonatomic, copy) NSString * _Nullable _description;
/// externalReference
@property (nonatomic, copy) NSString * _Nullable externalReference;
/// feesDetails
@property (nonatomic, copy) NSArray<PXFeeDetail *> * _Nullable feeDetails;
/// paymentId
@property (nonatomic) int64_t id;
/// issuer
@property (nonatomic, copy) NSString * _Nullable issuerId;
/// metadata
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nullable metadata;
/// moneyReleaseDate
@property (nonatomic, copy) NSDate * _Nullable moneyReleaseDate;
/// notificationUrl
@property (nonatomic, copy) NSString * _Nullable notificationUrl;
/// operationType
@property (nonatomic, copy) NSString * _Nullable operationType;
/// order
@property (nonatomic, strong) PXOrder * _Nullable order;
/// payer
@property (nonatomic, strong) PXPayer * _Nullable payer;
/// paymentMethodId
@property (nonatomic, copy) NSString * _Nullable paymentMethodId;
/// paymentTypeId
@property (nonatomic, copy) NSString * _Nullable paymentTypeId;
/// refunds
@property (nonatomic, copy) NSArray<PXRefund *> * _Nullable refunds;
/// statementDescriptor
@property (nonatomic, copy) NSString * _Nullable statementDescriptor;
/// status
@property (nonatomic, copy) NSString * _Nonnull status;
/// statusDetail
@property (nonatomic, copy) NSString * _Nonnull statusDetail;
/// transactionDetails
@property (nonatomic, strong) PXTransactionDetails * _Nullable transactionDetails;
/// tokenId
@property (nonatomic, copy) NSString * _Nullable tokenId;
/// :nodoc:
- (NSDate * _Nullable)getDateFromString:(NSString * _Nullable)string SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
+ (PXPayment * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// :nodoc:
- (BOOL)isCardPaymentType SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXPayment (SWIFT_EXTENSION(MercadoPagoSDK))
@end


@interface PXPayment (SWIFT_EXTENSION(MercadoPagoSDK))
/// Payment Id getter (String)
- (NSString * _Nullable)getPaymentId SWIFT_WARN_UNUSED_RESULT;
/// Status getter
- (NSString * _Nonnull)getStatus SWIFT_WARN_UNUSED_RESULT;
/// Status detail getter
- (NSString * _Nonnull)getStatusDetail SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getPaymentMethodTypeId SWIFT_WARN_UNUSED_RESULT;
@end

@protocol PXPaymentProcessor;
@protocol PXSplitPaymentProcessor;

/// Any configuration related to the Payment. You can set you own <code>PXPaymentProcessor</code>. Configuration of discounts, charges and custom Payment Method Plugin.
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXPaymentConfiguration")
@interface PXPaymentConfiguration : NSObject
/// Builder for <code>PXPaymentConfiguration</code> construction.
/// \param paymentProcessor Your custom implementation of <code>PXPaymentProcessor</code>.
///
- (nonnull instancetype)initWithPaymentProcessor:(id <PXPaymentProcessor> _Nonnull)paymentProcessor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSplitPaymentProcessor:(id <PXSplitPaymentProcessor> _Nonnull)splitPaymentProcessor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@class PXPaymentMethodPlugin;
@class PXPaymentTypeChargeRule;

@interface PXPaymentConfiguration (SWIFT_EXTENSION(MercadoPagoSDK))
/// Add your own payment method option to pay.
/// \param plugin Your custom payment method plugin.
///
- (PXPaymentConfiguration * _Nonnull)addPaymentMethodPluginWithPlugin:(PXPaymentMethodPlugin * _Nonnull)plugin SWIFT_WARN_UNUSED_RESULT;
/// Add extra charges that will apply to total amount.
/// \param charges the list (array) of charges that could apply.
///
- (PXPaymentConfiguration * _Nonnull)addChargeRulesWithCharges:(NSArray<PXPaymentTypeChargeRule *> * _Nonnull)charges SWIFT_WARN_UNUSED_RESULT;
/// <code>PXDiscountConfiguration</code> is an object that represents the discount to be applied or error information to present to the user. It’s mandatory to handle your discounts by hand if you set a payment processor.
/// \param config Your custom discount configuration
///
- (PXPaymentConfiguration * _Nonnull)setDiscountConfigurationWithConfig:(PXDiscountConfiguration * _Nonnull)config SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
@end


/// Data needed for payment.
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXPaymentData")
@interface PXPaymentData : NSObject <NSCopying>
/// :nodoc:
- (id _Nonnull)copyWithZone:(struct _NSZone * _Nullable)zone SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






@class PXToken;
@class PXPaymentMethod;

@interface PXPaymentData (SWIFT_EXTENSION(MercadoPagoSDK))
/// getToken
- (PXToken * _Nullable)getToken SWIFT_WARN_UNUSED_RESULT;
/// getPayerCost
- (PXPayerCost * _Nullable)getPayerCost SWIFT_WARN_UNUSED_RESULT;
/// getNumberOfInstallments
- (NSInteger)getNumberOfInstallments SWIFT_WARN_UNUSED_RESULT;
/// getIssuer
- (PXIssuer * _Nullable)getIssuer SWIFT_WARN_UNUSED_RESULT;
/// getPayer
- (PXPayer * _Nullable)getPayer SWIFT_WARN_UNUSED_RESULT;
/// getPaymentMethod
- (PXPaymentMethod * _Nullable)getPaymentMethod SWIFT_WARN_UNUSED_RESULT;
/// getDiscount
- (PXDiscount * _Nullable)getDiscount SWIFT_WARN_UNUSED_RESULT;
/// getRawAmount
- (NSDecimalNumber * _Nullable)getRawAmount SWIFT_WARN_UNUSED_RESULT;
@end

@class PXSetting;

/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXPaymentMethod")
@interface PXPaymentMethod : NSObject
@property (nonatomic, copy) NSArray<NSString *> * _Nullable additionalInfoNeeded;
@property (nonatomic, copy) NSString * _Null_unspecified id;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nonnull paymentTypeId;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSString * _Nullable secureThumbnail;
@property (nonatomic, copy) NSString * _Nullable thumbnail;
@property (nonatomic, copy) NSString * _Nullable deferredCapture;
@property (nonatomic, copy) NSArray<PXSetting *> * _Nonnull settings;
@property (nonatomic, copy) NSString * _Nullable merchantAccountId;
@property (nonatomic, copy) NSArray<PXFinancialInstitution *> * _Nullable financialInstitutions;
@property (nonatomic, strong) NSData * _Nullable externalPaymentPluginImageData;
@property (nonatomic, copy) NSString * _Nullable paymentMethodDescription;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable processingModes;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXPaymentMethod * _Nullable)fromJSONToPXPaymentMethodWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<PXPaymentMethod *> * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXPaymentMethod (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
@end



@interface PXPaymentMethod (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSInteger)cardNumberLenght SWIFT_WARN_UNUSED_RESULT;
- (BOOL)secCodeInBack SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) BOOL isOnlinePaymentMethod;
@end


/// Implement this Protocol to show and optional screen <code>UIViewController</code> in your custom payment method flow. (Configure custom payment method step). We push this screen after you choose the means of payment.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK29PXPaymentMethodConfigProtocol_")
@protocol PXPaymentMethodConfigProtocol
/// Define your custom config screen ViewController.
- (UIViewController * _Nullable)configViewController SWIFT_WARN_UNUSED_RESULT;
/// Use this method to decide whether the screen should show or not.
/// \param store <code>PXCheckoutStore</code> reference. Use it to check scenarios/data.
///
- (BOOL)shouldSkipWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to receive the <code>PXCheckoutStore</code> data and current theme <code>PXTheme</code>.
/// \param checkoutStore <code>PXCheckoutStore</code> reference.
///
/// \param theme <code>PXTheme</code> current protocol.
///
- (void)didReceiveWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore theme:(id <PXTheme> _Nonnull)theme;
/// Optional method to receive the plugin navigation handler. Use this to execute next screen, show loading, etc.
/// \param navigationHandler <code>PXPluginNavigationHandler</code> reference.
///
- (void)navigationHandlerWithNavigationHandler:(PXPluginNavigationHandler * _Nonnull)navigationHandler;
@end


/// Use to create yout custom payment option. We´ll display this option in the payment method selection screen.
SWIFT_CLASS("_TtC14MercadoPagoSDK21PXPaymentMethodPlugin")
@interface PXPaymentMethodPlugin : NSObject
/// Builder construction.
/// \param paymentMethodPluginId Id for your custom payment method.
///
/// \param name Name for your custom payment method.
///
/// \param image Image icon for your custom payment method.
///
/// \param description Description for your custom payment method.
///
- (nonnull instancetype)initWithPaymentMethodPluginId:(NSString * _Nonnull)paymentMethodPluginId name:(NSString * _Nonnull)name image:(UIImage * _Nonnull)image description:(NSString * _Nullable)description OBJC_DESIGNATED_INITIALIZER;
/// Async block to initialize your payment method plugin.
@property (nonatomic, copy) void (^ _Nonnull initPaymentMethodPlugin)(PXCheckoutStore * _Nonnull, void (^ _Nonnull)(BOOL));
- (void (^ _Nonnull)(PXCheckoutStore * _Nonnull, void (^ _Nonnull)(BOOL)))initPaymentMethodPlugin SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Determinate if your payment method plugin should be show.
@property (nonatomic, copy) BOOL (^ _Nonnull mustShowPaymentMethodPlugin)(PXCheckoutStore * _Nonnull);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end

/// :nodoc:
typedef SWIFT_ENUM(NSInteger, DisplayOrder, closed) {
  DisplayOrderTOP = 0,
  DisplayOrderBOTTOM = 1,
};



@interface PXPaymentMethodPlugin (SWIFT_EXTENSION(MercadoPagoSDK))
/// Set config screen for payment method. Implementing <code>PXPaymentMethodConfigProtocol</code>
/// \param config PXPaymentMethodConfigProtocol implementation.
///
- (void)setPaymentMethodConfigWithConfig:(id <PXPaymentMethodConfigProtocol> _Nonnull)config;
/// Set display order for your custom payment method. The values are <code>TOP</code> or <code>BOTTOM</code>.
/// \param order Display order value.
///
- (void)setDisplayOrderWithOrder:(enum DisplayOrder)order;
@end


@interface PXPaymentMethodPlugin (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nonnull)getId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getDescription SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getComment SWIFT_WARN_UNUSED_RESULT;
- (BOOL)hasChildren SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCard SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCustomerPaymentMethod SWIFT_WARN_UNUSED_RESULT;
- (UIImage * _Nullable)getImage SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTitle SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getSubtitle SWIFT_WARN_UNUSED_RESULT;
- (void)setDescription:(NSString * _Nullable)text;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK25PXPaymentMethodSearchItem")
@interface PXPaymentMethodSearchItem : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end





/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK30PXPaymentMethodSearchItemTypes")
@interface PXPaymentMethodSearchItemTypes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK19PXPaymentPreference")
@interface PXPaymentPreference : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class PXPaymentProcessorNavigationHandler;
@protocol PXPaymentProcessorErrorHandler;

/// Implement this protocol to create your custom Payment Processor.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK18PXPaymentProcessor_")
@protocol PXPaymentProcessor <NSObject>
/// ViewController associated to your Payment Processor. This is optional VC. If you need a screen to make the payment, return your Payment processor viewController. If you return nil, we use our custom Animated progress Button.
- (UIViewController * _Nullable)paymentProcessorViewController SWIFT_WARN_UNUSED_RESULT;
/// Use this method to decide if your Payment Processor support the Payment.
- (BOOL)support SWIFT_WARN_UNUSED_RESULT;
@optional
/// Receive a navigation handler for your custom Payment Processor. <code>PXPaymentProcessorNavigationHandler</code>. If you create your custom vieeController to make the payment, you should use it this handler.
/// \param navigationHandler Navigation handler -> <code>PXPaymentProcessorNavigationHandler</code>
///
- (void)didReceiveWithNavigationHandler:(PXPaymentProcessorNavigationHandler * _Nonnull)navigationHandler;
/// Receive a reference to checkout store with: <code>PXPaymentData</code> and <code>PXCheckoutPreference</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
- (void)didReceiveWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore;
/// Method that we will call if <code>paymentProcessorViewController()</code> is nil. You can return the data of your custom payment. You can return a <code>PXGenericPayment</code> or <code>PXBusinessResult</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
/// \param errorHandler Use to receive an error handler.
///
/// \param successWithBusinessResult Use to return a custom PXBusinessResult.
///
/// \param successWithPaymentResult Use to return a simple payment PXGenericPayment.
///
- (void)startPaymentWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore errorHandler:(id <PXPaymentProcessorErrorHandler> _Nonnull)errorHandler successWithBusinessResult:(void (^ _Nonnull)(PXBusinessResult * _Nonnull))successWithBusinessResult successWithPaymentResult:(void (^ _Nonnull)(PXGenericPayment * _Nonnull))successWithPaymentResult;
/// Optional method to inform your Payment timeout. (This is the timeout of your payment backend). Define this value for a superb checkout animated progress button experience.
- (double)paymentTimeOut SWIFT_WARN_UNUSED_RESULT;
@end


/// Handler protocol to manage wrong scenarios related with your custom Processor
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK30PXPaymentProcessorErrorHandler_")
@protocol PXPaymentProcessorErrorHandler <NSObject>
/// Use this method to make a shake action on the loading progress payment button and change the color to red
- (void)showError;
@end


/// Navigation handler to manage communication between your Processor and our Checkout. You should use this navigation handler only with custom Processor view. When you use a custom <code>UIViewController</code> to present your own view, you can use this Object in order to notify: <code>didFinishPayment</code>, <code>showLoading</code>, <code>hideLoading</code>.
SWIFT_CLASS("_TtC14MercadoPagoSDK35PXPaymentProcessorNavigationHandler")
@interface PXPaymentProcessorNavigationHandler : NSObject
/// Notify that your custom payment was finish. Send your custom <code>PXBusinessResult</code> object.
/// \param businessResult Your custom <code>PXBusinessResult</code>.
///
- (void)didFinishPaymentWithBusinessResult:(PXBusinessResult * _Nonnull)businessResult;
/// :nodoc:
- (void)didFinishPaymentWithPaymentStatus:(enum RemotePaymentStatus)paymentStatus statusDetails:(NSString * _Nonnull)statusDetails paymentId:(NSString * _Nullable)paymentId;
/// Notify that your payment was finish. Send a default Payment.
/// \param status Status of your payment.
///
/// \param statusDetail Status detail of your payment.
///
/// \param paymentId Id of your payment.
///
- (void)didFinishPaymentWithStatus:(NSString * _Nonnull)status statusDetail:(NSString * _Nonnull)statusDetail paymentId:(NSString * _Nullable)paymentId;
/// Call to Checkout next screen.
- (void)next;
/// Call to Checkout next screen and remove current screen from stack.
- (void)nextAndRemoveCurrentScreenFromStack;
/// Show our Checkout loading full screen.
- (void)showLoading;
/// Hide our Checkout loading full screen.
- (void)hideLoading;
/// Close checkout.
/// :nodoc:
- (void)close;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// This object declares custom preferences (customizations) for “Congrats” screen.
SWIFT_CLASS("_TtC14MercadoPagoSDK28PXPaymentResultConfiguration")
@interface PXPaymentResultConfiguration : NSObject
/// :nodoc:
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// Define your custom UIViews. <code>topView</code> and <code>bottomView</code> of the screen.
/// \param topView Optional custom top view.
///
/// \param bottomView Optional custom bottom view.
///
- (nonnull instancetype)initWithTopView:(UIView * _Nullable)topView bottomView:(UIView * _Nullable)bottomView OBJC_DESIGNATED_INITIALIZER;
@end


@class NSBundle;

@interface PXPaymentResultConfiguration (SWIFT_EXTENSION(MercadoPagoSDK))
- (void)shouldShowBadgeImage SWIFT_DEPRECATED;
- (void)hideBadgeImage SWIFT_DEPRECATED;
- (void)shouldShowLabelText SWIFT_DEPRECATED;
- (void)hideLabelText SWIFT_DEPRECATED;
- (UIImage * _Nullable)getApprovedBadgeImage SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)disableApprovedLabelText SWIFT_DEPRECATED;
- (void)setApprovedWithLabelText:(NSString * _Nonnull)labelText SWIFT_DEPRECATED;
- (NSString * _Nullable)getApprovedLabelText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)setApprovedWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setApprovedSubtitleWithSubtitle:(NSString * _Nonnull)subtitle SWIFT_DEPRECATED;
- (void)setApprovedHeaderIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (void)setApprovedHeaderIconWithStringURL:(NSString * _Nonnull)stringURL SWIFT_DEPRECATED;
- (void)disablePendingLabelText SWIFT_DEPRECATED;
- (void)setPendingWithLabelText:(NSString * _Nonnull)labelText SWIFT_DEPRECATED;
- (NSString * _Nullable)getPendingLabelText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)setPendingWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setPendingSubtitleWithSubtitle:(NSString * _Nonnull)subtitle SWIFT_DEPRECATED;
- (void)setPendingHeaderIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (void)setPendingHeaderIconWithStringURL:(NSString * _Nonnull)stringURL SWIFT_DEPRECATED;
- (void)setPendingContentTextWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED;
- (void)setPendingContentTitleWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)disablePendingSecondaryExitButton SWIFT_DEPRECATED;
- (void)disablePendingContentText SWIFT_DEPRECATED;
- (void)disablePendingContentTitle SWIFT_DEPRECATED;
- (void)setRejectedWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setRejectedSubtitleWithSubtitle:(NSString * _Nonnull)subtitle SWIFT_DEPRECATED;
- (void)setRejectedHeaderIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (void)setRejectedHeaderIconWithStringURL:(NSString * _Nonnull)stringURL SWIFT_DEPRECATED;
- (void)setRejectedContentTextWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED;
- (void)setRejectedContentTitleWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)disableRejectedLabel SWIFT_DEPRECATED;
- (void)setRejectedIconSubtextWithText:(NSString * _Nonnull)text SWIFT_DEPRECATED;
- (void)disableRejectdSecondaryExitButton SWIFT_DEPRECATED;
- (void)disableRejectedContentText SWIFT_DEPRECATED;
- (void)disableRejectedContentTitle SWIFT_DEPRECATED;
- (void)setExitButtonTitleWithTitle:(NSString * _Nonnull)title SWIFT_DEPRECATED;
- (void)setStatusBackgroundColorWithColor:(UIColor * _Nonnull)color SWIFT_DEPRECATED;
- (UIColor * _Nullable)getStatusBackgroundColor SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)disableContentCell SWIFT_DEPRECATED;
- (void)disableApprovedBodyCell SWIFT_DEPRECATED;
- (void)disableApprovedAmount SWIFT_DEPRECATED;
- (void)disableApprovedReceipt SWIFT_DEPRECATED;
- (void)disableApprovedPaymentMethodInfo SWIFT_DEPRECATED;
- (void)enableAmount SWIFT_DEPRECATED;
- (void)enableApprovedReceipt SWIFT_DEPRECATED;
- (void)enableContnentCell SWIFT_DEPRECATED;
- (void)enableApprovedPaymentBodyCell SWIFT_DEPRECATED;
- (void)enablePaymentContentText SWIFT_DEPRECATED;
- (void)enablePaymentContentTitle SWIFT_DEPRECATED;
- (void)enableApprovedPaymentMethodInfo SWIFT_DEPRECATED;
- (NSString * _Nonnull)getApprovedTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getApprovedSubtitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getApprovedSecondaryButtonText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderApprovedIcon SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingSubtitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderPendingIcon SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingContetTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getPendingContentText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nullable)getPendingSecondaryButtonText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPendingSecondaryExitButtonDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPendingContentTextDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPendingContentTitleDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedSubtitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (void)setHeaderRejectedIconWithName:(NSString * _Nonnull)name bundle:(NSBundle * _Nonnull)bundle SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderRejectedIcon:(PXPaymentMethod * _Nullable)paymentMethod SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (UIImage * _Nullable)getHeaderImageFor:(PXPaymentMethod * _Nullable)paymentMethod SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedContetTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedContentText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nonnull)getRejectedIconSubtext SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nullable)getRejectedSecondaryButtonText SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isRejectedSecondaryExitButtonDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isRejectedContentTextDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isRejectedContentTitleDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (NSString * _Nullable)getExitButtonTitle SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isContentCellDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isApprovedPaymentBodyDisableCell SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPaymentMethodDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isAmountDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
- (BOOL)isPaymentIdDisable SWIFT_WARN_UNUSED_RESULT SWIFT_DEPRECATED;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK13PXPaymentType")
@interface PXPaymentType : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Use this object to apply a charge related to a payment type. The relationship is by <code>paymentTypeId</code>. You can specify a default <code>amountCharge</code> for each payment method.
SWIFT_CLASS("_TtC14MercadoPagoSDK23PXPaymentTypeChargeRule")
@interface PXPaymentTypeChargeRule : NSObject
- (nonnull instancetype)initWithPaymentMethdodId:(NSString * _Nonnull)paymentMethdodId amountCharge:(double)amountCharge SWIFT_DEPRECATED_MSG("Property paymentMethdodId has been renamed to paymentTypeId");
/// \param paymentTypeId paymentTypeId for which the currrent charge applies.
///
/// \param amountCharge Amount charge for the assigned payment type.
///
/// \param detailModal Optional screen intended to be shown modally in order to give further details on why this charge applies to the current payment. This screen will pop up when the charges row is pressed.
///
- (nonnull instancetype)initWithPaymentTypeId:(NSString * _Nonnull)paymentTypeId amountCharge:(double)amountCharge detailModal:(UIViewController * _Nullable)detailModal OBJC_DESIGNATED_INITIALIZER;
/// \param paymentTypeId paymentTypeId for which the currrent charge applies.
///
/// \param message Message that is shown whenever the amount is set to zero.
///
- (nonnull instancetype)initWithPaymentTypeId:(NSString * _Nonnull)paymentTypeId message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXPhone")
@interface PXPhone : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXPicture")
@interface PXPicture : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK25PXPluginNavigationHandler")
@interface PXPluginNavigationHandler : NSObject
- (nonnull instancetype)initWithCheckout:(MercadoPagoCheckout * _Nonnull)withCheckout OBJC_DESIGNATED_INITIALIZER;
- (void)showFailureWithMessage:(NSString * _Nonnull)message errorDetails:(NSString * _Nonnull)errorDetails retryButtonCallback:(void (^ _Nullable)(void))retryButtonCallback;
- (void)next;
- (void)nextAndRemoveCurrentScreenFromStack;
- (void)cancel;
- (void)showLoading;
- (void)hideLoading;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK8PXRefund")
@interface PXRefund : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, PXResultKey, closed) {
  PXResultKeySUCCESS = 0,
  PXResultKeyFAILURE = 1,
  PXResultKeyPENDING = 2,
};


/// This object declares custom preferences (customizations) for “Review and Confirm” screen.
SWIFT_CLASS("_TtC14MercadoPagoSDK28PXReviewConfirmConfiguration")
@interface PXReviewConfirmConfiguration : NSObject
/// :nodoc:
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
/// \param itemsEnabled Determinate if items view should be display or not.
///
/// \param topView Optional custom top view.
///
/// \param bottomView Optional custom bottom view.
///
- (nonnull instancetype)initWithItemsEnabled:(BOOL)itemsEnabled topView:(UIView * _Nullable)topView bottomView:(UIView * _Nullable)bottomView OBJC_DESIGNATED_INITIALIZER;
@end









SWIFT_PROTOCOL("_TtP14MercadoPagoSDK40PXReviewConfirmDynamicViewsConfiguration_")
@protocol PXReviewConfirmDynamicViewsConfiguration <NSObject>
- (NSArray<UIView *> * _Nullable)topCustomViewsWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
- (NSArray<UIView *> * _Nullable)bottomCustomViewsWithStore:(PXCheckoutStore * _Nonnull)store SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK16PXSavedCardToken")
@interface PXSavedCardToken : PXCardToken
- (BOOL)validate SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isCustomerPaymentMethod SWIFT_WARN_UNUSED_RESULT;
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK19PXSavedESCCardToken")
@interface PXSavedESCCardToken : PXSavedCardToken
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK14PXSecurityCode")
@interface PXSecurityCode : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK22PXSensitiveInformation")
@interface PXSensitiveInformation : NSObject
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXSetting")
@interface PXSetting : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK6PXSite")
@interface PXSite : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXSplitConfiguration")
@interface PXSplitConfiguration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end



/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXSplitPaymentMethod")
@interface PXSplitPaymentMethod : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP14MercadoPagoSDK23PXSplitPaymentProcessor_")
@protocol PXSplitPaymentProcessor <NSObject>
/// ViewController associated to your Payment Processor. This is optional VC. If you need a screen to make the payment, return your Payment processor viewController. If you return nil, we use our custom Animated progress Button.
- (UIViewController * _Nullable)paymentProcessorViewController SWIFT_WARN_UNUSED_RESULT;
/// Use this method to decide if your Payment Processor support the Payment.
- (BOOL)support SWIFT_WARN_UNUSED_RESULT;
@optional
/// Receive a navigation handler for your custom Payment Processor. <code>PXPaymentProcessorNavigationHandler</code>. If you create your custom vieeController to make the payment, you should use it this handler.
/// \param navigationHandler Navigation handler -> <code>PXPaymentProcessorNavigationHandler</code>
///
- (void)didReceiveWithNavigationHandler:(PXPaymentProcessorNavigationHandler * _Nonnull)navigationHandler;
/// Receive a reference to checkout store with: <code>PXPaymentData</code> and <code>PXCheckoutPreference</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
- (void)didReceiveWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore;
/// Method that we will call if <code>paymentProcessorViewController()</code> is nil. You can return the data of your custom payment. You can return a <code>PXGenericPayment</code> or <code>PXBusinessResult</code>.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
/// \param errorHandler Use to receive an error handler.
///
/// \param successWithBasePayment Use to return a custom PXBasePayment.
///
- (void)startPaymentWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore errorHandler:(id <PXPaymentProcessorErrorHandler> _Nonnull)errorHandler successWithBasePayment:(void (^ _Nonnull)(id <PXBasePayment> _Nonnull))successWithBasePayment;
/// Optional method to inform your Payment timeout. (This is the timeout of your payment backend). Define this value for a superb checkout animated progress button experience.
- (double)paymentTimeOut SWIFT_WARN_UNUSED_RESULT;
@required
/// Method to inform if this payment processor supports split payment method payment.
/// \param checkoutStore Checkout store reference -> <code>PXCheckoutStore</code>
///
- (BOOL)supportSplitPaymentMethodPaymentWithCheckoutStore:(PXCheckoutStore * _Nonnull)checkoutStore SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to skip Review and Confirm screen/step in checkout flow.
- (BOOL)shouldSkipUserConfirmation SWIFT_WARN_UNUSED_RESULT;
@end

@class PXThemeProperty;

/// Protocol to define advanced customization of your UI.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK7PXTheme_")
@protocol PXTheme
/// Define your navigation bar color. <code>PXThemeProperty</code> background and <code>PXThemeProperty</code> tint color for font color.
- (PXThemeProperty * _Nonnull)navigationBar SWIFT_WARN_UNUSED_RESULT;
/// Full screen loading colores. <code>PXThemeProperty</code> background and <code>PXThemeProperty</code> tint color for animated spinner color.
- (PXThemeProperty * _Nonnull)loadingComponent SWIFT_WARN_UNUSED_RESULT;
/// Use this color for Revisa & Confirma screen header background color.
- (UIColor * _Nonnull)highlightBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Use this color for Revisa & Confirma body background color.
- (UIColor * _Nonnull)detailedBackgroundColor SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to override the color of navigation bar text color for highlight backgrounds.
- (UIColor * _Nullable)highlightNavigationTintColor SWIFT_WARN_UNUSED_RESULT;
@required
/// Checkout status bar style. Use the native <code>UIStatusBarStyle</code>
- (UIStatusBarStyle)statusBarStyle SWIFT_WARN_UNUSED_RESULT;
@optional
/// Optional method to set your custom font.
- (NSString * _Nullable)fontName SWIFT_WARN_UNUSED_RESULT;
/// Optional method to set your custom light font.
- (NSString * _Nullable)lightFontName SWIFT_WARN_UNUSED_RESULT;
/// Optional method to set your custom  semi-bold font.
- (NSString * _Nullable)semiBoldFontName SWIFT_WARN_UNUSED_RESULT;
@end


/// Use this object to create certain properties to define <code>PXTheme</code> implementation.
SWIFT_CLASS("_TtC14MercadoPagoSDK15PXThemeProperty")
@interface PXThemeProperty : NSObject
/// \param backgroundColor Determinate the background property color.
///
/// \param tintColor Determinate the tint property color.
///
- (nonnull instancetype)initWithBackgroundColor:(UIColor * _Nonnull)backgroundColor tintColor:(UIColor * _Nonnull)tintColor OBJC_DESIGNATED_INITIALIZER;
/// Getter for getBackgroundColor property.
- (UIColor * _Nonnull)getBackgroundColor SWIFT_WARN_UNUSED_RESULT;
/// Getter for getTintColor property.
- (UIColor * _Nonnull)getTintColor SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK7PXToken")
@interface PXToken : NSObject
@property (nonatomic, copy) NSString * _Null_unspecified id;
@property (nonatomic, copy) NSString * _Nullable publicKey;
@property (nonatomic, copy) NSString * _Nonnull cardId;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic, copy) NSDate * _Nullable usedDate;
@property (nonatomic) NSInteger cardNumberLength;
@property (nonatomic, copy) NSDate * _Nullable dateCreated;
@property (nonatomic) NSInteger securityCodeLength;
@property (nonatomic) NSInteger expirationMonth;
@property (nonatomic) NSInteger expirationYear;
@property (nonatomic, copy) NSDate * _Nullable dateLastUpdated;
@property (nonatomic, copy) NSDate * _Nullable dueDate;
@property (nonatomic, copy) NSString * _Nonnull firstSixDigits;
@property (nonatomic, copy) NSString * _Nonnull lastFourDigits;
@property (nonatomic, strong) PXCardHolder * _Nullable cardholder;
@property (nonatomic, copy) NSString * _Nullable esc;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXToken * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


@interface PXToken (SWIFT_EXTENSION(MercadoPagoSDK))
/// :nodoc:
- (NSString * _Nullable)getId SWIFT_WARN_UNUSED_RESULT;
@end


@interface PXToken (SWIFT_EXTENSION(MercadoPagoSDK))
- (NSString * _Nullable)getCardBin SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getCardLastForDigits SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isIssuerRequired SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canBeClone SWIFT_WARN_UNUSED_RESULT;
@end

@protocol PXTrackerListener;

/// Use this object to call methods related to our PX tracker.
SWIFT_CLASS("_TtC14MercadoPagoSDK9PXTracker")
@interface PXTracker : NSObject
/// Set your own tracker listener protocol to be aware of PX-Checkout tracking events
+ (void)setListener:(id <PXTrackerListener> _Nonnull)listener;
+ (void)setListener:(id <PXTrackerListener> _Nonnull)listener flowName:(NSString * _Nullable)flowName flowDetails:(NSDictionary<NSString *, id> * _Nullable)flowDetails;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Protocol to stay notified about our tracking screens/events.
SWIFT_PROTOCOL("_TtP14MercadoPagoSDK17PXTrackerListener_")
@protocol PXTrackerListener <NSObject>
/// This method is called when a new screen is shown to the user and tracked by our Checkout.
/// \param screenName Screenname Melidata catalog.
///
/// \param extraParams Extra data.
///
- (void)trackScreenWithScreenName:(NSString * _Nonnull)screenName extraParams:(NSDictionary<NSString *, id> * _Nullable)extraParams;
/// This method is called when a new event is ocurred to the user and tracked by our Checkout.
/// \param screenName Event name.
///
/// \param action action.
///
/// \param result result.
///
/// \param extraParams Extra data.
///
- (void)trackEventWithScreenName:(NSString * _Nullable)screenName action:(NSString * _Null_unspecified)action result:(NSString * _Nullable)result extraParams:(NSDictionary<NSString *, id> * _Nullable)extraParams;
@end


SWIFT_CLASS("_TtC14MercadoPagoSDK23PXTrackingConfiguration")
@interface PXTrackingConfiguration : NSObject
- (nonnull instancetype)initWithTrackListener:(id <PXTrackerListener> _Nullable)trackListener flowName:(NSString * _Nullable)flowName flowDetails:(NSDictionary<NSString *, id> * _Nullable)flowDetails sessionId:(NSString * _Nullable)sessionId OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK20PXTransactionDetails")
@interface PXTransactionDetails : NSObject
@property (nonatomic, copy) NSString * _Nullable externalResourceUrl;
@property (nonatomic, copy) NSString * _Nullable financialInstitution;
@property (nonatomic, copy) NSString * _Nullable paymentMethodReferenceId;
- (NSData * _Nullable)toJSONAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PXTransactionDetails * _Nullable)fromJSONWithData:(NSData * _Nonnull)data error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_DEPRECATED_MSG("-init is unavailable");
@end


/// :nodoc:
SWIFT_CLASS("_TtC14MercadoPagoSDK26PXVendorSpecificAttributes")
@interface PXVendorSpecificAttributes : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end









@interface UINavigationController (SWIFT_EXTENSION(MercadoPagoSDK))
@property (nonatomic, readonly) BOOL shouldAutorotate;
@end






#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
